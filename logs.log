2023-06-26 19:01:50,920:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-26 19:01:50,920:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-26 19:01:50,920:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-26 19:01:50,920:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-26 19:01:51,755:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-06-26 19:04:22,955:INFO:Initializing load_model()
2023-06-26 19:04:22,955:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-26 19:04:39,959:INFO:Initializing load_model()
2023-06-26 19:04:39,960:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-26 19:04:39,980:INFO:Initializing load_model()
2023-06-26 19:04:39,981:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-26 19:04:40,011:INFO:Initializing predict_model()
2023-06-26 19:04:40,012:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FD68978AC0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Russhi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['minimum_nights',
                                             'availability_365',
                                             'accommodates'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'room_type',
                                             'District', 'rental_type',
                                             'license_disclosed'],
                                    transfor...
                 TransformerWrapper(include=['room_type', 'District',
                                             'license_disclosed'],
                                    transformer=OneHotEncoder(cols=['room_type',
                                                                    'District',
                                                                    'license_disclosed'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['neighbourhood'],
                                    transformer=TargetEncoder(cols=['neighbourhood'],
                                                              handle_missing='return_nan'))),
                ('trained_model', HuberRegressor(alpha=0.15, epsilon=1.1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FD65DBAE60>)
2023-06-26 19:04:40,012:INFO:Checking exceptions
2023-06-26 19:04:40,012:INFO:Preloading libraries
2023-06-26 19:04:40,012:INFO:Set up data.
2023-06-26 19:04:40,015:INFO:Set up index.
2023-06-26 19:04:47,814:INFO:Initializing load_model()
2023-06-26 19:04:47,814:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-26 19:04:47,833:INFO:Initializing load_model()
2023-06-26 19:04:47,834:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-26 19:04:47,863:INFO:Initializing predict_model()
2023-06-26 19:04:47,863:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FD68978EE0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Russhi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['minimum_nights',
                                             'availability_365',
                                             'accommodates'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'room_type',
                                             'District', 'rental_type',
                                             'license_disclosed'],
                                    transfor...
                 TransformerWrapper(include=['room_type', 'District',
                                             'license_disclosed'],
                                    transformer=OneHotEncoder(cols=['room_type',
                                                                    'District',
                                                                    'license_disclosed'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['neighbourhood'],
                                    transformer=TargetEncoder(cols=['neighbourhood'],
                                                              handle_missing='return_nan'))),
                ('trained_model', HuberRegressor(alpha=0.15, epsilon=1.1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FD65DBAE60>)
2023-06-26 19:04:47,863:INFO:Checking exceptions
2023-06-26 19:04:47,863:INFO:Preloading libraries
2023-06-26 19:04:47,864:INFO:Set up data.
2023-06-26 19:04:47,867:INFO:Set up index.
2023-06-26 19:04:50,226:INFO:Initializing load_model()
2023-06-26 19:04:50,226:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-26 19:04:50,244:INFO:Initializing load_model()
2023-06-26 19:04:50,244:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-26 19:04:50,276:INFO:Initializing predict_model()
2023-06-26 19:04:50,276:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FD68979DE0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Russhi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['minimum_nights',
                                             'availability_365',
                                             'accommodates'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'room_type',
                                             'District', 'rental_type',
                                             'license_disclosed'],
                                    transfor...
                 TransformerWrapper(include=['room_type', 'District',
                                             'license_disclosed'],
                                    transformer=OneHotEncoder(cols=['room_type',
                                                                    'District',
                                                                    'license_disclosed'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['neighbourhood'],
                                    transformer=TargetEncoder(cols=['neighbourhood'],
                                                              handle_missing='return_nan'))),
                ('trained_model', HuberRegressor(alpha=0.15, epsilon=1.1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FD65DBBD90>)
2023-06-26 19:04:50,277:INFO:Checking exceptions
2023-06-26 19:04:50,277:INFO:Preloading libraries
2023-06-26 19:04:50,277:INFO:Set up data.
2023-06-26 19:04:50,280:INFO:Set up index.
2023-06-26 19:04:54,676:INFO:Initializing load_model()
2023-06-26 19:04:54,676:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-26 19:04:54,693:INFO:Initializing load_model()
2023-06-26 19:04:54,694:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-26 19:04:54,729:INFO:Initializing predict_model()
2023-06-26 19:04:54,729:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FD68978B50>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Russhi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['minimum_nights',
                                             'availability_365',
                                             'accommodates'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'room_type',
                                             'District', 'rental_type',
                                             'license_disclosed'],
                                    transfor...
                 TransformerWrapper(include=['room_type', 'District',
                                             'license_disclosed'],
                                    transformer=OneHotEncoder(cols=['room_type',
                                                                    'District',
                                                                    'license_disclosed'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['neighbourhood'],
                                    transformer=TargetEncoder(cols=['neighbourhood'],
                                                              handle_missing='return_nan'))),
                ('trained_model', HuberRegressor(alpha=0.15, epsilon=1.1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FD65DBBD90>)
2023-06-26 19:04:54,729:INFO:Checking exceptions
2023-06-26 19:04:54,730:INFO:Preloading libraries
2023-06-26 19:04:54,730:INFO:Set up data.
2023-06-26 19:04:54,733:INFO:Set up index.
2023-06-26 19:04:59,490:INFO:Initializing load_model()
2023-06-26 19:04:59,490:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-26 19:04:59,510:INFO:Initializing load_model()
2023-06-26 19:04:59,511:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-26 19:04:59,539:INFO:Initializing predict_model()
2023-06-26 19:04:59,539:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FD68978430>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Russhi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['minimum_nights',
                                             'availability_365',
                                             'accommodates'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'room_type',
                                             'District', 'rental_type',
                                             'license_disclosed'],
                                    transfor...
                 TransformerWrapper(include=['room_type', 'District',
                                             'license_disclosed'],
                                    transformer=OneHotEncoder(cols=['room_type',
                                                                    'District',
                                                                    'license_disclosed'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['neighbourhood'],
                                    transformer=TargetEncoder(cols=['neighbourhood'],
                                                              handle_missing='return_nan'))),
                ('trained_model', HuberRegressor(alpha=0.15, epsilon=1.1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FD65DBA440>)
2023-06-26 19:04:59,539:INFO:Checking exceptions
2023-06-26 19:04:59,539:INFO:Preloading libraries
2023-06-26 19:04:59,540:INFO:Set up data.
2023-06-26 19:04:59,542:INFO:Set up index.
2023-06-26 19:05:03,743:INFO:Initializing load_model()
2023-06-26 19:05:03,743:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-26 19:05:03,760:INFO:Initializing load_model()
2023-06-26 19:05:03,760:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-26 19:05:03,785:INFO:Initializing predict_model()
2023-06-26 19:05:03,785:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FD65DD7A90>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Russhi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['minimum_nights',
                                             'availability_365',
                                             'accommodates'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'room_type',
                                             'District', 'rental_type',
                                             'license_disclosed'],
                                    transfor...
                 TransformerWrapper(include=['room_type', 'District',
                                             'license_disclosed'],
                                    transformer=OneHotEncoder(cols=['room_type',
                                                                    'District',
                                                                    'license_disclosed'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['neighbourhood'],
                                    transformer=TargetEncoder(cols=['neighbourhood'],
                                                              handle_missing='return_nan'))),
                ('trained_model', HuberRegressor(alpha=0.15, epsilon=1.1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FD640D9630>)
2023-06-26 19:05:03,785:INFO:Checking exceptions
2023-06-26 19:05:03,785:INFO:Preloading libraries
2023-06-26 19:05:03,785:INFO:Set up data.
2023-06-26 19:05:03,788:INFO:Set up index.
2023-06-26 19:05:06,837:INFO:Initializing load_model()
2023-06-26 19:05:06,837:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-26 19:05:06,852:INFO:Initializing load_model()
2023-06-26 19:05:06,852:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-26 19:05:06,879:INFO:Initializing predict_model()
2023-06-26 19:05:06,879:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FD65CF2A40>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Russhi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['minimum_nights',
                                             'availability_365',
                                             'accommodates'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'room_type',
                                             'District', 'rental_type',
                                             'license_disclosed'],
                                    transfor...
                 TransformerWrapper(include=['room_type', 'District',
                                             'license_disclosed'],
                                    transformer=OneHotEncoder(cols=['room_type',
                                                                    'District',
                                                                    'license_disclosed'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['neighbourhood'],
                                    transformer=TargetEncoder(cols=['neighbourhood'],
                                                              handle_missing='return_nan'))),
                ('trained_model', HuberRegressor(alpha=0.15, epsilon=1.1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FD65DBA950>)
2023-06-26 19:05:06,880:INFO:Checking exceptions
2023-06-26 19:05:06,880:INFO:Preloading libraries
2023-06-26 19:05:06,880:INFO:Set up data.
2023-06-26 19:05:06,883:INFO:Set up index.
2023-06-26 19:05:08,930:INFO:Initializing load_model()
2023-06-26 19:05:08,930:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-26 19:05:08,947:INFO:Initializing load_model()
2023-06-26 19:05:08,947:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-26 19:05:08,981:INFO:Initializing predict_model()
2023-06-26 19:05:08,981:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FD65DD5600>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Russhi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['minimum_nights',
                                             'availability_365',
                                             'accommodates'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'room_type',
                                             'District', 'rental_type',
                                             'license_disclosed'],
                                    transfor...
                 TransformerWrapper(include=['room_type', 'District',
                                             'license_disclosed'],
                                    transformer=OneHotEncoder(cols=['room_type',
                                                                    'District',
                                                                    'license_disclosed'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['neighbourhood'],
                                    transformer=TargetEncoder(cols=['neighbourhood'],
                                                              handle_missing='return_nan'))),
                ('trained_model', HuberRegressor(alpha=0.15, epsilon=1.1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FD65DB9AB0>)
2023-06-26 19:05:08,981:INFO:Checking exceptions
2023-06-26 19:05:08,981:INFO:Preloading libraries
2023-06-26 19:05:08,981:INFO:Set up data.
2023-06-26 19:05:08,985:INFO:Set up index.
2023-06-26 19:05:13,700:INFO:Initializing load_model()
2023-06-26 19:05:13,700:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-26 19:05:13,715:INFO:Initializing load_model()
2023-06-26 19:05:13,715:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-26 19:05:13,741:INFO:Initializing predict_model()
2023-06-26 19:05:13,741:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FD634B65C0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Russhi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['minimum_nights',
                                             'availability_365',
                                             'accommodates'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'room_type',
                                             'District', 'rental_type',
                                             'license_disclosed'],
                                    transfor...
                 TransformerWrapper(include=['room_type', 'District',
                                             'license_disclosed'],
                                    transformer=OneHotEncoder(cols=['room_type',
                                                                    'District',
                                                                    'license_disclosed'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['neighbourhood'],
                                    transformer=TargetEncoder(cols=['neighbourhood'],
                                                              handle_missing='return_nan'))),
                ('trained_model', HuberRegressor(alpha=0.15, epsilon=1.1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FD65DBA440>)
2023-06-26 19:05:13,741:INFO:Checking exceptions
2023-06-26 19:05:13,741:INFO:Preloading libraries
2023-06-26 19:05:13,741:INFO:Set up data.
2023-06-26 19:05:13,744:INFO:Set up index.
2023-06-26 19:05:19,653:INFO:Initializing load_model()
2023-06-26 19:05:19,654:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-26 19:05:19,673:INFO:Initializing load_model()
2023-06-26 19:05:19,673:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-26 19:05:19,700:INFO:Initializing predict_model()
2023-06-26 19:05:19,700:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FD3FCE1240>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Russhi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['minimum_nights',
                                             'availability_365',
                                             'accommodates'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'room_type',
                                             'District', 'rental_type',
                                             'license_disclosed'],
                                    transfor...
                 TransformerWrapper(include=['room_type', 'District',
                                             'license_disclosed'],
                                    transformer=OneHotEncoder(cols=['room_type',
                                                                    'District',
                                                                    'license_disclosed'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['neighbourhood'],
                                    transformer=TargetEncoder(cols=['neighbourhood'],
                                                              handle_missing='return_nan'))),
                ('trained_model', HuberRegressor(alpha=0.15, epsilon=1.1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FD65DBA440>)
2023-06-26 19:05:19,700:INFO:Checking exceptions
2023-06-26 19:05:19,700:INFO:Preloading libraries
2023-06-26 19:05:19,700:INFO:Set up data.
2023-06-26 19:05:19,703:INFO:Set up index.
2023-06-26 19:06:16,544:INFO:Initializing load_model()
2023-06-26 19:06:16,545:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-26 19:06:16,568:INFO:Initializing load_model()
2023-06-26 19:06:16,568:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-26 19:06:16,620:INFO:Initializing predict_model()
2023-06-26 19:06:16,620:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FD68702FE0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Russhi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['minimum_nights',
                                             'availability_365',
                                             'accommodates'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'room_type',
                                             'District', 'rental_type',
                                             'license_disclosed'],
                                    transfor...
                 TransformerWrapper(include=['room_type', 'District',
                                             'license_disclosed'],
                                    transformer=OneHotEncoder(cols=['room_type',
                                                                    'District',
                                                                    'license_disclosed'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['neighbourhood'],
                                    transformer=TargetEncoder(cols=['neighbourhood'],
                                                              handle_missing='return_nan'))),
                ('trained_model', HuberRegressor(alpha=0.15, epsilon=1.1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FD640D97E0>)
2023-06-26 19:06:16,620:INFO:Checking exceptions
2023-06-26 19:06:16,620:INFO:Preloading libraries
2023-06-26 19:06:16,620:INFO:Set up data.
2023-06-26 19:06:16,624:INFO:Set up index.
2023-06-26 19:06:24,718:INFO:Initializing load_model()
2023-06-26 19:06:24,718:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-26 19:06:24,740:INFO:Initializing load_model()
2023-06-26 19:06:24,740:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-26 19:06:24,768:INFO:Initializing predict_model()
2023-06-26 19:06:24,768:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FD6897BD00>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Russhi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['minimum_nights',
                                             'availability_365',
                                             'accommodates'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'room_type',
                                             'District', 'rental_type',
                                             'license_disclosed'],
                                    transfor...
                 TransformerWrapper(include=['room_type', 'District',
                                             'license_disclosed'],
                                    transformer=OneHotEncoder(cols=['room_type',
                                                                    'District',
                                                                    'license_disclosed'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['neighbourhood'],
                                    transformer=TargetEncoder(cols=['neighbourhood'],
                                                              handle_missing='return_nan'))),
                ('trained_model', HuberRegressor(alpha=0.15, epsilon=1.1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FD686DE440>)
2023-06-26 19:06:24,768:INFO:Checking exceptions
2023-06-26 19:06:24,769:INFO:Preloading libraries
2023-06-26 19:06:24,769:INFO:Set up data.
2023-06-26 19:06:24,771:INFO:Set up index.
2023-06-26 19:06:27,083:INFO:Initializing load_model()
2023-06-26 19:06:27,083:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-26 19:06:27,104:INFO:Initializing load_model()
2023-06-26 19:06:27,104:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-26 19:06:27,134:INFO:Initializing predict_model()
2023-06-26 19:06:27,134:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FD68B82560>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Russhi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['minimum_nights',
                                             'availability_365',
                                             'accommodates'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'room_type',
                                             'District', 'rental_type',
                                             'license_disclosed'],
                                    transfor...
                 TransformerWrapper(include=['room_type', 'District',
                                             'license_disclosed'],
                                    transformer=OneHotEncoder(cols=['room_type',
                                                                    'District',
                                                                    'license_disclosed'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['neighbourhood'],
                                    transformer=TargetEncoder(cols=['neighbourhood'],
                                                              handle_missing='return_nan'))),
                ('trained_model', HuberRegressor(alpha=0.15, epsilon=1.1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FD640D97E0>)
2023-06-26 19:06:27,134:INFO:Checking exceptions
2023-06-26 19:06:27,135:INFO:Preloading libraries
2023-06-26 19:06:27,135:INFO:Set up data.
2023-06-26 19:06:27,138:INFO:Set up index.
2023-06-26 19:06:31,584:INFO:Initializing load_model()
2023-06-26 19:06:31,584:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-26 19:06:31,609:INFO:Initializing load_model()
2023-06-26 19:06:31,609:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-26 19:06:31,639:INFO:Initializing predict_model()
2023-06-26 19:06:31,639:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FD634B71F0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Russhi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['minimum_nights',
                                             'availability_365',
                                             'accommodates'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'room_type',
                                             'District', 'rental_type',
                                             'license_disclosed'],
                                    transfor...
                 TransformerWrapper(include=['room_type', 'District',
                                             'license_disclosed'],
                                    transformer=OneHotEncoder(cols=['room_type',
                                                                    'District',
                                                                    'license_disclosed'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['neighbourhood'],
                                    transformer=TargetEncoder(cols=['neighbourhood'],
                                                              handle_missing='return_nan'))),
                ('trained_model', HuberRegressor(alpha=0.15, epsilon=1.1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FD686DE440>)
2023-06-26 19:06:31,640:INFO:Checking exceptions
2023-06-26 19:06:31,640:INFO:Preloading libraries
2023-06-26 19:06:31,640:INFO:Set up data.
2023-06-26 19:06:31,643:INFO:Set up index.
2023-06-26 19:06:36,473:INFO:Initializing load_model()
2023-06-26 19:06:36,473:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-26 19:06:36,503:INFO:Initializing load_model()
2023-06-26 19:06:36,503:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-26 19:06:36,533:INFO:Initializing predict_model()
2023-06-26 19:06:36,533:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FD65DD65C0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Russhi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['minimum_nights',
                                             'availability_365',
                                             'accommodates'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'room_type',
                                             'District', 'rental_type',
                                             'license_disclosed'],
                                    transfor...
                 TransformerWrapper(include=['room_type', 'District',
                                             'license_disclosed'],
                                    transformer=OneHotEncoder(cols=['room_type',
                                                                    'District',
                                                                    'license_disclosed'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['neighbourhood'],
                                    transformer=TargetEncoder(cols=['neighbourhood'],
                                                              handle_missing='return_nan'))),
                ('trained_model', HuberRegressor(alpha=0.15, epsilon=1.1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FD686DE290>)
2023-06-26 19:06:36,534:INFO:Checking exceptions
2023-06-26 19:06:36,534:INFO:Preloading libraries
2023-06-26 19:06:36,534:INFO:Set up data.
2023-06-26 19:06:36,537:INFO:Set up index.
2023-06-26 19:06:41,895:INFO:Initializing load_model()
2023-06-26 19:06:41,895:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-26 19:06:41,918:INFO:Initializing load_model()
2023-06-26 19:06:41,918:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-26 19:06:41,948:INFO:Initializing predict_model()
2023-06-26 19:06:41,948:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FD686BBCA0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Russhi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['minimum_nights',
                                             'availability_365',
                                             'accommodates'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'room_type',
                                             'District', 'rental_type',
                                             'license_disclosed'],
                                    transfor...
                 TransformerWrapper(include=['room_type', 'District',
                                             'license_disclosed'],
                                    transformer=OneHotEncoder(cols=['room_type',
                                                                    'District',
                                                                    'license_disclosed'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['neighbourhood'],
                                    transformer=TargetEncoder(cols=['neighbourhood'],
                                                              handle_missing='return_nan'))),
                ('trained_model', HuberRegressor(alpha=0.15, epsilon=1.1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FD686DE290>)
2023-06-26 19:06:41,948:INFO:Checking exceptions
2023-06-26 19:06:41,948:INFO:Preloading libraries
2023-06-26 19:06:41,948:INFO:Set up data.
2023-06-26 19:06:41,951:INFO:Set up index.
2023-06-26 19:06:45,463:INFO:Initializing load_model()
2023-06-26 19:06:45,463:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-26 19:06:45,495:INFO:Initializing load_model()
2023-06-26 19:06:45,495:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-26 19:06:45,524:INFO:Initializing predict_model()
2023-06-26 19:06:45,524:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FD65DD6200>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Russhi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['minimum_nights',
                                             'availability_365',
                                             'accommodates'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'room_type',
                                             'District', 'rental_type',
                                             'license_disclosed'],
                                    transfor...
                 TransformerWrapper(include=['room_type', 'District',
                                             'license_disclosed'],
                                    transformer=OneHotEncoder(cols=['room_type',
                                                                    'District',
                                                                    'license_disclosed'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['neighbourhood'],
                                    transformer=TargetEncoder(cols=['neighbourhood'],
                                                              handle_missing='return_nan'))),
                ('trained_model', HuberRegressor(alpha=0.15, epsilon=1.1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FD686DE950>)
2023-06-26 19:06:45,525:INFO:Checking exceptions
2023-06-26 19:06:45,525:INFO:Preloading libraries
2023-06-26 19:06:45,525:INFO:Set up data.
2023-06-26 19:06:45,528:INFO:Set up index.
2023-06-26 19:06:46,955:INFO:Initializing load_model()
2023-06-26 19:06:46,956:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-26 19:06:46,972:INFO:Initializing load_model()
2023-06-26 19:06:46,972:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-26 19:06:46,998:INFO:Initializing predict_model()
2023-06-26 19:06:46,998:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FD687032B0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Russhi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['minimum_nights',
                                             'availability_365',
                                             'accommodates'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'room_type',
                                             'District', 'rental_type',
                                             'license_disclosed'],
                                    transfor...
                 TransformerWrapper(include=['room_type', 'District',
                                             'license_disclosed'],
                                    transformer=OneHotEncoder(cols=['room_type',
                                                                    'District',
                                                                    'license_disclosed'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['neighbourhood'],
                                    transformer=TargetEncoder(cols=['neighbourhood'],
                                                              handle_missing='return_nan'))),
                ('trained_model', HuberRegressor(alpha=0.15, epsilon=1.1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FD686DE680>)
2023-06-26 19:06:46,998:INFO:Checking exceptions
2023-06-26 19:06:46,998:INFO:Preloading libraries
2023-06-26 19:06:46,999:INFO:Set up data.
2023-06-26 19:06:47,001:INFO:Set up index.
2023-06-26 19:06:50,309:INFO:Initializing load_model()
2023-06-26 19:06:50,309:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-26 19:06:50,329:INFO:Initializing load_model()
2023-06-26 19:06:50,329:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-26 19:06:50,360:INFO:Initializing predict_model()
2023-06-26 19:06:50,360:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FD65DD66E0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Russhi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['minimum_nights',
                                             'availability_365',
                                             'accommodates'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'room_type',
                                             'District', 'rental_type',
                                             'license_disclosed'],
                                    transfor...
                 TransformerWrapper(include=['room_type', 'District',
                                             'license_disclosed'],
                                    transformer=OneHotEncoder(cols=['room_type',
                                                                    'District',
                                                                    'license_disclosed'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['neighbourhood'],
                                    transformer=TargetEncoder(cols=['neighbourhood'],
                                                              handle_missing='return_nan'))),
                ('trained_model', HuberRegressor(alpha=0.15, epsilon=1.1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FD686DE830>)
2023-06-26 19:06:50,360:INFO:Checking exceptions
2023-06-26 19:06:50,360:INFO:Preloading libraries
2023-06-26 19:06:50,360:INFO:Set up data.
2023-06-26 19:06:50,363:INFO:Set up index.
2023-06-26 19:10:00,883:INFO:Initializing load_model()
2023-06-26 19:10:00,883:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-26 19:10:00,897:INFO:Initializing load_model()
2023-06-26 19:10:00,898:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-26 19:10:00,928:INFO:Initializing predict_model()
2023-06-26 19:10:00,929:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FD6E4DE770>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Russhi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['minimum_nights',
                                             'availability_365',
                                             'accommodates'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'room_type',
                                             'District', 'rental_type',
                                             'license_disclosed'],
                                    transfor...
                 TransformerWrapper(include=['room_type', 'District',
                                             'license_disclosed'],
                                    transformer=OneHotEncoder(cols=['room_type',
                                                                    'District',
                                                                    'license_disclosed'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['neighbourhood'],
                                    transformer=TargetEncoder(cols=['neighbourhood'],
                                                              handle_missing='return_nan'))),
                ('trained_model', HuberRegressor(alpha=0.15, epsilon=1.1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FD3FCC5510>)
2023-06-26 19:10:00,929:INFO:Checking exceptions
2023-06-26 19:10:00,929:INFO:Preloading libraries
2023-06-26 19:10:00,929:INFO:Set up data.
2023-06-26 19:10:00,933:INFO:Set up index.
2023-06-26 19:12:08,659:INFO:Initializing load_model()
2023-06-26 19:12:08,659:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-26 19:12:08,696:INFO:Initializing predict_model()
2023-06-26 19:12:08,696:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FD65EE7F40>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Russhi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['minimum_nights',
                                             'availability_365',
                                             'accommodates'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'room_type',
                                             'District', 'rental_type',
                                             'license_disclosed'],
                                    transfor...
                 TransformerWrapper(include=['room_type', 'District',
                                             'license_disclosed'],
                                    transformer=OneHotEncoder(cols=['room_type',
                                                                    'District',
                                                                    'license_disclosed'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['neighbourhood'],
                                    transformer=TargetEncoder(cols=['neighbourhood'],
                                                              handle_missing='return_nan'))),
                ('trained_model', HuberRegressor(alpha=0.15, epsilon=1.1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FD63508670>)
2023-06-26 19:12:08,696:INFO:Checking exceptions
2023-06-26 19:12:08,696:INFO:Preloading libraries
2023-06-26 19:12:08,696:INFO:Set up data.
2023-06-26 19:12:08,701:INFO:Set up index.
2023-06-27 09:00:54,316:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-27 09:00:54,318:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-27 09:00:54,318:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-27 09:00:54,318:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-27 09:00:54,635:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-06-27 09:00:54,707:INFO:Initializing load_model()
2023-06-27 09:00:54,707:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-27 09:00:54,761:INFO:Initializing predict_model()
2023-06-27 09:00:54,761:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E754D71F90>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Russhi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['minimum_nights',
                                             'availability_365',
                                             'accommodates'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'room_type',
                                             'District', 'rental_type',
                                             'license_disclosed'],
                                    transfor...
                 TransformerWrapper(include=['room_type', 'District',
                                             'license_disclosed'],
                                    transformer=OneHotEncoder(cols=['room_type',
                                                                    'District',
                                                                    'license_disclosed'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['neighbourhood'],
                                    transformer=TargetEncoder(cols=['neighbourhood'],
                                                              handle_missing='return_nan'))),
                ('trained_model', HuberRegressor(alpha=0.15, epsilon=1.1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E7236A16C0>)
2023-06-27 09:00:54,762:INFO:Checking exceptions
2023-06-27 09:00:54,762:INFO:Preloading libraries
2023-06-27 09:00:54,762:INFO:Set up data.
2023-06-27 09:00:54,766:INFO:Set up index.
2023-06-27 09:00:59,774:INFO:Initializing load_model()
2023-06-27 09:00:59,774:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-27 09:00:59,816:INFO:Initializing predict_model()
2023-06-27 09:00:59,816:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E7236BC100>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Russhi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['minimum_nights',
                                             'availability_365',
                                             'accommodates'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'room_type',
                                             'District', 'rental_type',
                                             'license_disclosed'],
                                    transfor...
                 TransformerWrapper(include=['room_type', 'District',
                                             'license_disclosed'],
                                    transformer=OneHotEncoder(cols=['room_type',
                                                                    'District',
                                                                    'license_disclosed'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['neighbourhood'],
                                    transformer=TargetEncoder(cols=['neighbourhood'],
                                                              handle_missing='return_nan'))),
                ('trained_model', HuberRegressor(alpha=0.15, epsilon=1.1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E754D681F0>)
2023-06-27 09:00:59,816:INFO:Checking exceptions
2023-06-27 09:00:59,816:INFO:Preloading libraries
2023-06-27 09:00:59,817:INFO:Set up data.
2023-06-27 09:00:59,820:INFO:Set up index.
2023-06-27 09:17:03,101:INFO:Initializing load_model()
2023-06-27 09:17:03,101:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-27 09:17:03,135:INFO:Initializing predict_model()
2023-06-27 09:17:03,135:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E77DB6DF00>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Russhi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['minimum_nights',
                                             'availability_365',
                                             'accommodates'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'room_type',
                                             'District', 'rental_type',
                                             'license_disclosed'],
                                    transfor...
                 TransformerWrapper(include=['room_type', 'District',
                                             'license_disclosed'],
                                    transformer=OneHotEncoder(cols=['room_type',
                                                                    'District',
                                                                    'license_disclosed'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['neighbourhood'],
                                    transformer=TargetEncoder(cols=['neighbourhood'],
                                                              handle_missing='return_nan'))),
                ('trained_model', HuberRegressor(alpha=0.15, epsilon=1.1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E783E7C310>)
2023-06-27 09:17:03,135:INFO:Checking exceptions
2023-06-27 09:17:03,135:INFO:Preloading libraries
2023-06-27 09:17:03,135:INFO:Set up data.
2023-06-27 09:17:03,139:INFO:Set up index.
2023-06-27 09:25:02,845:INFO:Initializing load_model()
2023-06-27 09:25:02,846:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-27 09:25:02,897:INFO:Initializing predict_model()
2023-06-27 09:25:02,897:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E7570A0E80>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Russhi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['minimum_nights',
                                             'availability_365',
                                             'accommodates'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'room_type',
                                             'District', 'rental_type',
                                             'license_disclosed'],
                                    transfor...
                 TransformerWrapper(include=['room_type', 'District',
                                             'license_disclosed'],
                                    transformer=OneHotEncoder(cols=['room_type',
                                                                    'District',
                                                                    'license_disclosed'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['neighbourhood'],
                                    transformer=TargetEncoder(cols=['neighbourhood'],
                                                              handle_missing='return_nan'))),
                ('trained_model', HuberRegressor(alpha=0.15, epsilon=1.1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E73D2CF250>)
2023-06-27 09:25:02,897:INFO:Checking exceptions
2023-06-27 09:25:02,897:INFO:Preloading libraries
2023-06-27 09:25:02,897:INFO:Set up data.
2023-06-27 09:25:02,900:INFO:Set up index.
2023-06-27 09:25:34,744:INFO:Initializing load_model()
2023-06-27 09:25:34,744:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-27 09:25:34,786:INFO:Initializing predict_model()
2023-06-27 09:25:34,786:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E7243DE560>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Russhi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['minimum_nights',
                                             'availability_365',
                                             'accommodates'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'room_type',
                                             'District', 'rental_type',
                                             'license_disclosed'],
                                    transfor...
                 TransformerWrapper(include=['room_type', 'District',
                                             'license_disclosed'],
                                    transformer=OneHotEncoder(cols=['room_type',
                                                                    'District',
                                                                    'license_disclosed'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['neighbourhood'],
                                    transformer=TargetEncoder(cols=['neighbourhood'],
                                                              handle_missing='return_nan'))),
                ('trained_model', HuberRegressor(alpha=0.15, epsilon=1.1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E73D2CF1C0>)
2023-06-27 09:25:34,787:INFO:Checking exceptions
2023-06-27 09:25:34,787:INFO:Preloading libraries
2023-06-27 09:25:34,787:INFO:Set up data.
2023-06-27 09:25:34,790:INFO:Set up index.
2023-06-27 09:26:34,405:INFO:Initializing load_model()
2023-06-27 09:26:34,405:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-27 09:26:34,447:INFO:Initializing predict_model()
2023-06-27 09:26:34,450:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E74311E710>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Russhi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['minimum_nights',
                                             'availability_365',
                                             'accommodates'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'room_type',
                                             'District', 'rental_type',
                                             'license_disclosed'],
                                    transfor...
                 TransformerWrapper(include=['room_type', 'District',
                                             'license_disclosed'],
                                    transformer=OneHotEncoder(cols=['room_type',
                                                                    'District',
                                                                    'license_disclosed'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['neighbourhood'],
                                    transformer=TargetEncoder(cols=['neighbourhood'],
                                                              handle_missing='return_nan'))),
                ('trained_model', HuberRegressor(alpha=0.15, epsilon=1.1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E723665D80>)
2023-06-27 09:26:34,450:INFO:Checking exceptions
2023-06-27 09:26:34,450:INFO:Preloading libraries
2023-06-27 09:26:34,451:INFO:Set up data.
2023-06-27 09:26:34,455:INFO:Set up index.
2023-06-27 09:27:15,647:INFO:Initializing load_model()
2023-06-27 09:27:15,648:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-27 09:27:15,682:INFO:Initializing predict_model()
2023-06-27 09:27:15,682:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E7570A1930>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Russhi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['minimum_nights',
                                             'availability_365',
                                             'accommodates'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'room_type',
                                             'District', 'rental_type',
                                             'license_disclosed'],
                                    transfor...
                 TransformerWrapper(include=['room_type', 'District',
                                             'license_disclosed'],
                                    transformer=OneHotEncoder(cols=['room_type',
                                                                    'District',
                                                                    'license_disclosed'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['neighbourhood'],
                                    transformer=TargetEncoder(cols=['neighbourhood'],
                                                              handle_missing='return_nan'))),
                ('trained_model', HuberRegressor(alpha=0.15, epsilon=1.1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E723665D80>)
2023-06-27 09:27:15,683:INFO:Checking exceptions
2023-06-27 09:27:15,683:INFO:Preloading libraries
2023-06-27 09:27:15,683:INFO:Set up data.
2023-06-27 09:27:15,686:INFO:Set up index.
2023-06-27 09:27:35,334:INFO:Initializing load_model()
2023-06-27 09:27:35,334:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-27 09:27:35,383:INFO:Initializing predict_model()
2023-06-27 09:27:35,384:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E73407A860>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Russhi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['minimum_nights',
                                             'availability_365',
                                             'accommodates'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'room_type',
                                             'District', 'rental_type',
                                             'license_disclosed'],
                                    transfor...
                 TransformerWrapper(include=['room_type', 'District',
                                             'license_disclosed'],
                                    transformer=OneHotEncoder(cols=['room_type',
                                                                    'District',
                                                                    'license_disclosed'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['neighbourhood'],
                                    transformer=TargetEncoder(cols=['neighbourhood'],
                                                              handle_missing='return_nan'))),
                ('trained_model', HuberRegressor(alpha=0.15, epsilon=1.1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E7828A3C70>)
2023-06-27 09:27:35,384:INFO:Checking exceptions
2023-06-27 09:27:35,384:INFO:Preloading libraries
2023-06-27 09:27:35,384:INFO:Set up data.
2023-06-27 09:27:35,389:INFO:Set up index.
2023-06-27 09:27:48,196:INFO:Initializing load_model()
2023-06-27 09:27:48,196:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-27 09:27:48,242:INFO:Initializing predict_model()
2023-06-27 09:27:48,242:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E741210340>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Russhi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['minimum_nights',
                                             'availability_365',
                                             'accommodates'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'room_type',
                                             'District', 'rental_type',
                                             'license_disclosed'],
                                    transfor...
                 TransformerWrapper(include=['room_type', 'District',
                                             'license_disclosed'],
                                    transformer=OneHotEncoder(cols=['room_type',
                                                                    'District',
                                                                    'license_disclosed'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['neighbourhood'],
                                    transformer=TargetEncoder(cols=['neighbourhood'],
                                                              handle_missing='return_nan'))),
                ('trained_model', HuberRegressor(alpha=0.15, epsilon=1.1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E7236A15A0>)
2023-06-27 09:27:48,242:INFO:Checking exceptions
2023-06-27 09:27:48,242:INFO:Preloading libraries
2023-06-27 09:27:48,242:INFO:Set up data.
2023-06-27 09:27:48,247:INFO:Set up index.
2023-06-27 09:28:13,065:INFO:Initializing load_model()
2023-06-27 09:28:13,065:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-27 09:28:13,121:INFO:Initializing predict_model()
2023-06-27 09:28:13,121:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E728035CF0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Russhi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['minimum_nights',
                                             'availability_365',
                                             'accommodates'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'room_type',
                                             'District', 'rental_type',
                                             'license_disclosed'],
                                    transfor...
                 TransformerWrapper(include=['room_type', 'District',
                                             'license_disclosed'],
                                    transformer=OneHotEncoder(cols=['room_type',
                                                                    'District',
                                                                    'license_disclosed'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['neighbourhood'],
                                    transformer=TargetEncoder(cols=['neighbourhood'],
                                                              handle_missing='return_nan'))),
                ('trained_model', HuberRegressor(alpha=0.15, epsilon=1.1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E77D6BAD40>)
2023-06-27 09:28:13,122:INFO:Checking exceptions
2023-06-27 09:28:13,122:INFO:Preloading libraries
2023-06-27 09:28:13,122:INFO:Set up data.
2023-06-27 09:28:13,125:INFO:Set up index.
2023-06-27 09:29:21,011:INFO:Initializing load_model()
2023-06-27 09:29:21,011:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-27 09:29:21,065:INFO:Initializing predict_model()
2023-06-27 09:29:21,065:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E757006FB0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Russhi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['minimum_nights',
                                             'availability_365',
                                             'accommodates'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'room_type',
                                             'District', 'rental_type',
                                             'license_disclosed'],
                                    transfor...
                 TransformerWrapper(include=['room_type', 'District',
                                             'license_disclosed'],
                                    transformer=OneHotEncoder(cols=['room_type',
                                                                    'District',
                                                                    'license_disclosed'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['neighbourhood'],
                                    transformer=TargetEncoder(cols=['neighbourhood'],
                                                              handle_missing='return_nan'))),
                ('trained_model', HuberRegressor(alpha=0.15, epsilon=1.1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E7236A13F0>)
2023-06-27 09:29:21,065:INFO:Checking exceptions
2023-06-27 09:29:21,066:INFO:Preloading libraries
2023-06-27 09:29:21,066:INFO:Set up data.
2023-06-27 09:29:21,071:INFO:Set up index.
2023-06-27 09:30:11,744:INFO:Initializing load_model()
2023-06-27 09:30:11,744:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-27 09:30:11,786:INFO:Initializing predict_model()
2023-06-27 09:30:11,787:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E7575B8400>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Russhi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['minimum_nights',
                                             'availability_365',
                                             'accommodates'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'room_type',
                                             'District', 'rental_type',
                                             'license_disclosed'],
                                    transfor...
                 TransformerWrapper(include=['room_type', 'District',
                                             'license_disclosed'],
                                    transformer=OneHotEncoder(cols=['room_type',
                                                                    'District',
                                                                    'license_disclosed'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['neighbourhood'],
                                    transformer=TargetEncoder(cols=['neighbourhood'],
                                                              handle_missing='return_nan'))),
                ('trained_model', HuberRegressor(alpha=0.15, epsilon=1.1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E7236A13F0>)
2023-06-27 09:30:11,787:INFO:Checking exceptions
2023-06-27 09:30:11,787:INFO:Preloading libraries
2023-06-27 09:30:11,787:INFO:Set up data.
2023-06-27 09:30:11,793:INFO:Set up index.
2023-06-27 09:32:15,085:INFO:Initializing load_model()
2023-06-27 09:32:15,085:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-27 09:32:15,117:INFO:Initializing predict_model()
2023-06-27 09:32:15,117:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E7548E0970>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Russhi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['minimum_nights',
                                             'availability_365',
                                             'accommodates'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'room_type',
                                             'District', 'rental_type',
                                             'license_disclosed'],
                                    transfor...
                 TransformerWrapper(include=['room_type', 'District',
                                             'license_disclosed'],
                                    transformer=OneHotEncoder(cols=['room_type',
                                                                    'District',
                                                                    'license_disclosed'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['neighbourhood'],
                                    transformer=TargetEncoder(cols=['neighbourhood'],
                                                              handle_missing='return_nan'))),
                ('trained_model', HuberRegressor(alpha=0.15, epsilon=1.1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E7236A13F0>)
2023-06-27 09:32:15,117:INFO:Checking exceptions
2023-06-27 09:32:15,117:INFO:Preloading libraries
2023-06-27 09:32:15,119:INFO:Set up data.
2023-06-27 09:32:15,125:INFO:Set up index.
2023-06-27 09:46:56,943:INFO:Initializing load_model()
2023-06-27 09:46:56,943:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-27 09:46:56,972:INFO:Initializing predict_model()
2023-06-27 09:46:56,973:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E750ADC580>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Russhi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['minimum_nights',
                                             'availability_365',
                                             'accommodates'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'room_type',
                                             'District', 'rental_type',
                                             'license_disclosed'],
                                    transfor...
                 TransformerWrapper(include=['room_type', 'District',
                                             'license_disclosed'],
                                    transformer=OneHotEncoder(cols=['room_type',
                                                                    'District',
                                                                    'license_disclosed'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['neighbourhood'],
                                    transformer=TargetEncoder(cols=['neighbourhood'],
                                                              handle_missing='return_nan'))),
                ('trained_model', HuberRegressor(alpha=0.15, epsilon=1.1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E73F98D630>)
2023-06-27 09:46:56,973:INFO:Checking exceptions
2023-06-27 09:46:56,973:INFO:Preloading libraries
2023-06-27 09:46:56,973:INFO:Set up data.
2023-06-27 09:46:56,978:INFO:Set up index.
2023-06-27 09:59:33,312:INFO:Initializing load_model()
2023-06-27 09:59:33,312:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-27 09:59:33,342:INFO:Initializing predict_model()
2023-06-27 09:59:33,342:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E750ADC940>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Russhi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['minimum_nights',
                                             'availability_365',
                                             'accommodates'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'room_type',
                                             'District', 'rental_type',
                                             'license_disclosed'],
                                    transfor...
                 TransformerWrapper(include=['room_type', 'District',
                                             'license_disclosed'],
                                    transformer=OneHotEncoder(cols=['room_type',
                                                                    'District',
                                                                    'license_disclosed'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['neighbourhood'],
                                    transformer=TargetEncoder(cols=['neighbourhood'],
                                                              handle_missing='return_nan'))),
                ('trained_model', HuberRegressor(alpha=0.15, epsilon=1.1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E725915360>)
2023-06-27 09:59:33,342:INFO:Checking exceptions
2023-06-27 09:59:33,342:INFO:Preloading libraries
2023-06-27 09:59:33,342:INFO:Set up data.
2023-06-27 09:59:33,346:INFO:Set up index.
2023-06-27 09:59:39,700:INFO:Initializing load_model()
2023-06-27 09:59:39,700:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-27 09:59:39,729:INFO:Initializing predict_model()
2023-06-27 09:59:39,729:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E757044C40>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Russhi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['minimum_nights',
                                             'availability_365',
                                             'accommodates'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'room_type',
                                             'District', 'rental_type',
                                             'license_disclosed'],
                                    transfor...
                 TransformerWrapper(include=['room_type', 'District',
                                             'license_disclosed'],
                                    transformer=OneHotEncoder(cols=['room_type',
                                                                    'District',
                                                                    'license_disclosed'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['neighbourhood'],
                                    transformer=TargetEncoder(cols=['neighbourhood'],
                                                              handle_missing='return_nan'))),
                ('trained_model', HuberRegressor(alpha=0.15, epsilon=1.1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E725915360>)
2023-06-27 09:59:39,729:INFO:Checking exceptions
2023-06-27 09:59:39,729:INFO:Preloading libraries
2023-06-27 09:59:39,730:INFO:Set up data.
2023-06-27 09:59:39,732:INFO:Set up index.
2023-06-27 09:59:45,464:INFO:Initializing load_model()
2023-06-27 09:59:45,464:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-27 09:59:45,492:INFO:Initializing predict_model()
2023-06-27 09:59:45,492:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E75493BA60>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Russhi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['minimum_nights',
                                             'availability_365',
                                             'accommodates'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'room_type',
                                             'District', 'rental_type',
                                             'license_disclosed'],
                                    transfor...
                 TransformerWrapper(include=['room_type', 'District',
                                             'license_disclosed'],
                                    transformer=OneHotEncoder(cols=['room_type',
                                                                    'District',
                                                                    'license_disclosed'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['neighbourhood'],
                                    transformer=TargetEncoder(cols=['neighbourhood'],
                                                              handle_missing='return_nan'))),
                ('trained_model', HuberRegressor(alpha=0.15, epsilon=1.1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E72BCCD5A0>)
2023-06-27 09:59:45,494:INFO:Checking exceptions
2023-06-27 09:59:45,494:INFO:Preloading libraries
2023-06-27 09:59:45,494:INFO:Set up data.
2023-06-27 09:59:45,497:INFO:Set up index.
2023-06-27 09:59:50,384:INFO:Initializing load_model()
2023-06-27 09:59:50,385:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-27 09:59:50,419:INFO:Initializing predict_model()
2023-06-27 09:59:50,419:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E7548E2350>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Russhi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['minimum_nights',
                                             'availability_365',
                                             'accommodates'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'room_type',
                                             'District', 'rental_type',
                                             'license_disclosed'],
                                    transfor...
                 TransformerWrapper(include=['room_type', 'District',
                                             'license_disclosed'],
                                    transformer=OneHotEncoder(cols=['room_type',
                                                                    'District',
                                                                    'license_disclosed'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['neighbourhood'],
                                    transformer=TargetEncoder(cols=['neighbourhood'],
                                                              handle_missing='return_nan'))),
                ('trained_model', HuberRegressor(alpha=0.15, epsilon=1.1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E72BCCCA60>)
2023-06-27 09:59:50,419:INFO:Checking exceptions
2023-06-27 09:59:50,419:INFO:Preloading libraries
2023-06-27 09:59:50,420:INFO:Set up data.
2023-06-27 09:59:50,422:INFO:Set up index.
2023-06-27 09:59:56,407:INFO:Initializing load_model()
2023-06-27 09:59:56,407:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-27 09:59:56,441:INFO:Initializing predict_model()
2023-06-27 09:59:56,441:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E7262CF490>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Russhi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['minimum_nights',
                                             'availability_365',
                                             'accommodates'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'room_type',
                                             'District', 'rental_type',
                                             'license_disclosed'],
                                    transfor...
                 TransformerWrapper(include=['room_type', 'District',
                                             'license_disclosed'],
                                    transformer=OneHotEncoder(cols=['room_type',
                                                                    'District',
                                                                    'license_disclosed'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['neighbourhood'],
                                    transformer=TargetEncoder(cols=['neighbourhood'],
                                                              handle_missing='return_nan'))),
                ('trained_model', HuberRegressor(alpha=0.15, epsilon=1.1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E725915360>)
2023-06-27 09:59:56,441:INFO:Checking exceptions
2023-06-27 09:59:56,441:INFO:Preloading libraries
2023-06-27 09:59:56,441:INFO:Set up data.
2023-06-27 09:59:56,445:INFO:Set up index.
2023-06-27 09:59:59,825:INFO:Initializing load_model()
2023-06-27 09:59:59,825:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-27 09:59:59,854:INFO:Initializing predict_model()
2023-06-27 09:59:59,855:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E7483628C0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Russhi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['minimum_nights',
                                             'availability_365',
                                             'accommodates'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'room_type',
                                             'District', 'rental_type',
                                             'license_disclosed'],
                                    transfor...
                 TransformerWrapper(include=['room_type', 'District',
                                             'license_disclosed'],
                                    transformer=OneHotEncoder(cols=['room_type',
                                                                    'District',
                                                                    'license_disclosed'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['neighbourhood'],
                                    transformer=TargetEncoder(cols=['neighbourhood'],
                                                              handle_missing='return_nan'))),
                ('trained_model', HuberRegressor(alpha=0.15, epsilon=1.1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E72BCCE950>)
2023-06-27 09:59:59,855:INFO:Checking exceptions
2023-06-27 09:59:59,855:INFO:Preloading libraries
2023-06-27 09:59:59,855:INFO:Set up data.
2023-06-27 09:59:59,858:INFO:Set up index.
2023-06-27 10:00:07,278:INFO:Initializing load_model()
2023-06-27 10:00:07,278:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-27 10:00:07,306:INFO:Initializing predict_model()
2023-06-27 10:00:07,307:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E754D73C40>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Russhi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['minimum_nights',
                                             'availability_365',
                                             'accommodates'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'room_type',
                                             'District', 'rental_type',
                                             'license_disclosed'],
                                    transfor...
                 TransformerWrapper(include=['room_type', 'District',
                                             'license_disclosed'],
                                    transformer=OneHotEncoder(cols=['room_type',
                                                                    'District',
                                                                    'license_disclosed'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['neighbourhood'],
                                    transformer=TargetEncoder(cols=['neighbourhood'],
                                                              handle_missing='return_nan'))),
                ('trained_model', HuberRegressor(alpha=0.15, epsilon=1.1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E72BCCFB50>)
2023-06-27 10:00:07,307:INFO:Checking exceptions
2023-06-27 10:00:07,307:INFO:Preloading libraries
2023-06-27 10:00:07,307:INFO:Set up data.
2023-06-27 10:00:07,310:INFO:Set up index.
2023-06-27 10:11:14,148:INFO:Initializing load_model()
2023-06-27 10:11:14,148:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-27 10:11:14,193:INFO:Initializing predict_model()
2023-06-27 10:11:14,193:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E757006980>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Russhi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['minimum_nights',
                                             'availability_365',
                                             'accommodates'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'room_type',
                                             'District', 'rental_type',
                                             'license_disclosed'],
                                    transfor...
                 TransformerWrapper(include=['room_type', 'District',
                                             'license_disclosed'],
                                    transformer=OneHotEncoder(cols=['room_type',
                                                                    'District',
                                                                    'license_disclosed'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['neighbourhood'],
                                    transformer=TargetEncoder(cols=['neighbourhood'],
                                                              handle_missing='return_nan'))),
                ('trained_model', HuberRegressor(alpha=0.15, epsilon=1.1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E744FEEE60>)
2023-06-27 10:11:14,193:INFO:Checking exceptions
2023-06-27 10:11:14,193:INFO:Preloading libraries
2023-06-27 10:11:14,193:INFO:Set up data.
2023-06-27 10:11:14,196:INFO:Set up index.
2023-06-27 10:13:03,742:INFO:Initializing load_model()
2023-06-27 10:13:03,742:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-27 10:13:03,774:INFO:Initializing predict_model()
2023-06-27 10:13:03,774:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E754D9D180>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Russhi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['minimum_nights',
                                             'availability_365',
                                             'accommodates'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'room_type',
                                             'District', 'rental_type',
                                             'license_disclosed'],
                                    transfor...
                 TransformerWrapper(include=['room_type', 'District',
                                             'license_disclosed'],
                                    transformer=OneHotEncoder(cols=['room_type',
                                                                    'District',
                                                                    'license_disclosed'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['neighbourhood'],
                                    transformer=TargetEncoder(cols=['neighbourhood'],
                                                              handle_missing='return_nan'))),
                ('trained_model', HuberRegressor(alpha=0.15, epsilon=1.1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E725915360>)
2023-06-27 10:13:03,774:INFO:Checking exceptions
2023-06-27 10:13:03,774:INFO:Preloading libraries
2023-06-27 10:13:03,775:INFO:Set up data.
2023-06-27 10:13:03,778:INFO:Set up index.
2023-06-27 10:54:18,649:INFO:Initializing load_model()
2023-06-27 10:54:18,650:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-27 10:54:18,683:INFO:Initializing predict_model()
2023-06-27 10:54:18,683:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E754D9F1F0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Russhi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['minimum_nights',
                                             'availability_365',
                                             'accommodates'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'room_type',
                                             'District', 'rental_type',
                                             'license_disclosed'],
                                    transfor...
                 TransformerWrapper(include=['room_type', 'District',
                                             'license_disclosed'],
                                    transformer=OneHotEncoder(cols=['room_type',
                                                                    'District',
                                                                    'license_disclosed'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['neighbourhood'],
                                    transformer=TargetEncoder(cols=['neighbourhood'],
                                                              handle_missing='return_nan'))),
                ('trained_model', HuberRegressor(alpha=0.15, epsilon=1.1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E725E52DD0>)
2023-06-27 10:54:18,683:INFO:Checking exceptions
2023-06-27 10:54:18,683:INFO:Preloading libraries
2023-06-27 10:54:18,683:INFO:Set up data.
2023-06-27 10:54:18,687:INFO:Set up index.
2023-06-27 11:52:56,963:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-27 11:52:56,963:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-27 11:52:56,963:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-27 11:52:56,963:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-27 11:52:57,311:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-06-27 11:52:57,396:INFO:Initializing load_model()
2023-06-27 11:52:57,396:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-27 11:52:57,439:INFO:Initializing predict_model()
2023-06-27 11:52:57,440:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002C689347610>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Russhi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['minimum_nights',
                                             'availability_365',
                                             'accommodates'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'room_type',
                                             'District', 'rental_type',
                                             'license_disclosed'],
                                    transfor...
                 TransformerWrapper(include=['room_type', 'District',
                                             'license_disclosed'],
                                    transformer=OneHotEncoder(cols=['room_type',
                                                                    'District',
                                                                    'license_disclosed'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['neighbourhood'],
                                    transformer=TargetEncoder(cols=['neighbourhood'],
                                                              handle_missing='return_nan'))),
                ('trained_model', HuberRegressor(alpha=0.15, epsilon=1.1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002C689BF41F0>)
2023-06-27 11:52:57,440:INFO:Checking exceptions
2023-06-27 11:52:57,440:INFO:Preloading libraries
2023-06-27 11:52:57,440:INFO:Set up data.
2023-06-27 11:52:57,443:INFO:Set up index.
2023-06-27 11:58:11,407:INFO:Initializing load_model()
2023-06-27 11:58:11,407:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-27 11:58:11,444:INFO:Initializing predict_model()
2023-06-27 11:58:11,444:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002C6808F8430>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Russhi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['minimum_nights',
                                             'availability_365',
                                             'accommodates'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'room_type',
                                             'District', 'rental_type',
                                             'license_disclosed'],
                                    transfor...
                 TransformerWrapper(include=['room_type', 'District',
                                             'license_disclosed'],
                                    transformer=OneHotEncoder(cols=['room_type',
                                                                    'District',
                                                                    'license_disclosed'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['neighbourhood'],
                                    transformer=TargetEncoder(cols=['neighbourhood'],
                                                              handle_missing='return_nan'))),
                ('trained_model', HuberRegressor(alpha=0.15, epsilon=1.1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002C6FC3168C0>)
2023-06-27 11:58:11,444:INFO:Checking exceptions
2023-06-27 11:58:11,444:INFO:Preloading libraries
2023-06-27 11:58:11,444:INFO:Set up data.
2023-06-27 11:58:11,448:INFO:Set up index.
2023-06-27 12:29:24,363:INFO:Initializing load_model()
2023-06-27 12:29:24,364:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-27 12:29:24,392:INFO:Initializing predict_model()
2023-06-27 12:29:24,393:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002C687342BC0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Russhi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['minimum_nights',
                                             'availability_365',
                                             'accommodates'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'room_type',
                                             'District', 'rental_type',
                                             'license_disclosed'],
                                    transfor...
                 TransformerWrapper(include=['room_type', 'District',
                                             'license_disclosed'],
                                    transformer=OneHotEncoder(cols=['room_type',
                                                                    'District',
                                                                    'license_disclosed'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['neighbourhood'],
                                    transformer=TargetEncoder(cols=['neighbourhood'],
                                                              handle_missing='return_nan'))),
                ('trained_model', HuberRegressor(alpha=0.15, epsilon=1.1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002C6A99B7AC0>)
2023-06-27 12:29:24,393:INFO:Checking exceptions
2023-06-27 12:29:24,393:INFO:Preloading libraries
2023-06-27 12:29:24,393:INFO:Set up data.
2023-06-27 12:29:24,397:INFO:Set up index.
2023-06-27 14:01:14,569:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-27 14:01:14,569:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-27 14:01:14,569:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-27 14:01:14,569:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-27 14:01:15,514:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-06-27 14:01:15,679:INFO:Initializing load_model()
2023-06-27 14:01:15,679:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-27 14:01:15,723:INFO:Initializing predict_model()
2023-06-27 14:01:15,725:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001D883318B80>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Russhi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['minimum_nights',
                                             'availability_365',
                                             'accommodates'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'room_type',
                                             'District', 'rental_type',
                                             'license_disclosed'],
                                    transfor...
                 TransformerWrapper(include=['room_type', 'District',
                                             'license_disclosed'],
                                    transformer=OneHotEncoder(cols=['room_type',
                                                                    'District',
                                                                    'license_disclosed'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['neighbourhood'],
                                    transformer=TargetEncoder(cols=['neighbourhood'],
                                                              handle_missing='return_nan'))),
                ('trained_model', HuberRegressor(alpha=0.15, epsilon=1.1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001D8FDF55900>)
2023-06-27 14:01:15,725:INFO:Checking exceptions
2023-06-27 14:01:15,725:INFO:Preloading libraries
2023-06-27 14:01:15,725:INFO:Set up data.
2023-06-27 14:01:15,727:INFO:Set up index.
2023-06-27 14:01:35,529:INFO:Initializing load_model()
2023-06-27 14:01:35,529:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-27 14:01:35,578:INFO:Initializing predict_model()
2023-06-27 14:01:35,578:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001D883358E20>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Russhi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['minimum_nights',
                                             'availability_365',
                                             'accommodates'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'room_type',
                                             'District', 'rental_type',
                                             'license_disclosed'],
                                    transfor...
                 TransformerWrapper(include=['room_type', 'District',
                                             'license_disclosed'],
                                    transformer=OneHotEncoder(cols=['room_type',
                                                                    'District',
                                                                    'license_disclosed'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['neighbourhood'],
                                    transformer=TargetEncoder(cols=['neighbourhood'],
                                                              handle_missing='return_nan'))),
                ('trained_model', HuberRegressor(alpha=0.15, epsilon=1.1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001D8FDF55900>)
2023-06-27 14:01:35,578:INFO:Checking exceptions
2023-06-27 14:01:35,578:INFO:Preloading libraries
2023-06-27 14:01:35,578:INFO:Set up data.
2023-06-27 14:01:35,581:INFO:Set up index.
2023-06-27 14:01:52,299:INFO:Initializing load_model()
2023-06-27 14:01:52,299:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-27 14:01:52,338:INFO:Initializing predict_model()
2023-06-27 14:01:52,338:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001D88331B790>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Russhi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['minimum_nights',
                                             'availability_365',
                                             'accommodates'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'room_type',
                                             'District', 'rental_type',
                                             'license_disclosed'],
                                    transfor...
                 TransformerWrapper(include=['room_type', 'District',
                                             'license_disclosed'],
                                    transformer=OneHotEncoder(cols=['room_type',
                                                                    'District',
                                                                    'license_disclosed'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['neighbourhood'],
                                    transformer=TargetEncoder(cols=['neighbourhood'],
                                                              handle_missing='return_nan'))),
                ('trained_model', HuberRegressor(alpha=0.15, epsilon=1.1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001D8FEA23A30>)
2023-06-27 14:01:52,338:INFO:Checking exceptions
2023-06-27 14:01:52,338:INFO:Preloading libraries
2023-06-27 14:01:52,338:INFO:Set up data.
2023-06-27 14:01:52,343:INFO:Set up index.
2023-06-27 14:01:57,834:INFO:Initializing load_model()
2023-06-27 14:01:57,834:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-27 14:01:57,864:INFO:Initializing predict_model()
2023-06-27 14:01:57,864:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001D88331A200>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Russhi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['minimum_nights',
                                             'availability_365',
                                             'accommodates'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'room_type',
                                             'District', 'rental_type',
                                             'license_disclosed'],
                                    transfor...
                 TransformerWrapper(include=['room_type', 'District',
                                             'license_disclosed'],
                                    transformer=OneHotEncoder(cols=['room_type',
                                                                    'District',
                                                                    'license_disclosed'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['neighbourhood'],
                                    transformer=TargetEncoder(cols=['neighbourhood'],
                                                              handle_missing='return_nan'))),
                ('trained_model', HuberRegressor(alpha=0.15, epsilon=1.1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001D8FDF55900>)
2023-06-27 14:01:57,864:INFO:Checking exceptions
2023-06-27 14:01:57,864:INFO:Preloading libraries
2023-06-27 14:01:57,864:INFO:Set up data.
2023-06-27 14:01:57,867:INFO:Set up index.
2023-06-27 16:02:13,363:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-27 16:02:13,363:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-27 16:02:13,363:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-27 16:02:13,363:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-27 16:02:14,287:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-06-27 16:02:14,453:INFO:Initializing load_model()
2023-06-27 16:02:14,453:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-27 16:02:14,490:INFO:Initializing predict_model()
2023-06-27 16:02:14,491:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001218FDB5330>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Russhi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['minimum_nights',
                                             'availability_365',
                                             'accommodates'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'room_type',
                                             'District', 'rental_type',
                                             'license_disclosed'],
                                    transfor...
                 TransformerWrapper(include=['room_type', 'District',
                                             'license_disclosed'],
                                    transformer=OneHotEncoder(cols=['room_type',
                                                                    'District',
                                                                    'license_disclosed'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['neighbourhood'],
                                    transformer=TargetEncoder(cols=['neighbourhood'],
                                                              handle_missing='return_nan'))),
                ('trained_model', HuberRegressor(alpha=0.15, epsilon=1.1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001218E9B69E0>)
2023-06-27 16:02:14,491:INFO:Checking exceptions
2023-06-27 16:02:14,491:INFO:Preloading libraries
2023-06-27 16:02:14,492:INFO:Set up data.
2023-06-27 16:02:14,497:INFO:Set up index.
2023-06-27 16:35:28,580:INFO:Initializing load_model()
2023-06-27 16:35:28,580:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-27 16:35:28,607:INFO:Initializing predict_model()
2023-06-27 16:35:28,608:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000012182F76B30>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Russhi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['minimum_nights',
                                             'availability_365',
                                             'accommodates'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'room_type',
                                             'District', 'rental_type',
                                             'license_disclosed'],
                                    transfor...
                 TransformerWrapper(include=['room_type', 'District',
                                             'license_disclosed'],
                                    transformer=OneHotEncoder(cols=['room_type',
                                                                    'District',
                                                                    'license_disclosed'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['neighbourhood'],
                                    transformer=TargetEncoder(cols=['neighbourhood'],
                                                              handle_missing='return_nan'))),
                ('trained_model', HuberRegressor(alpha=0.15, epsilon=1.1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000121AD394700>)
2023-06-27 16:35:28,608:INFO:Checking exceptions
2023-06-27 16:35:28,608:INFO:Preloading libraries
2023-06-27 16:35:28,608:INFO:Set up data.
2023-06-27 16:35:28,611:INFO:Set up index.
2023-06-27 17:24:28,415:INFO:Initializing load_model()
2023-06-27 17:24:28,415:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-27 17:24:28,446:INFO:Initializing predict_model()
2023-06-27 17:24:28,446:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000012186E2E170>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Russhi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['minimum_nights',
                                             'availability_365',
                                             'accommodates'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'room_type',
                                             'District', 'rental_type',
                                             'license_disclosed'],
                                    transfor...
                 TransformerWrapper(include=['room_type', 'District',
                                             'license_disclosed'],
                                    transformer=OneHotEncoder(cols=['room_type',
                                                                    'District',
                                                                    'license_disclosed'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['neighbourhood'],
                                    transformer=TargetEncoder(cols=['neighbourhood'],
                                                              handle_missing='return_nan'))),
                ('trained_model', HuberRegressor(alpha=0.15, epsilon=1.1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000121AF184AF0>)
2023-06-27 17:24:28,446:INFO:Checking exceptions
2023-06-27 17:24:28,446:INFO:Preloading libraries
2023-06-27 17:24:28,447:INFO:Set up data.
2023-06-27 17:24:28,450:INFO:Set up index.
2023-06-27 17:47:03,369:INFO:Initializing load_model()
2023-06-27 17:47:03,369:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-27 17:47:03,400:INFO:Initializing predict_model()
2023-06-27 17:47:03,400:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000121850BDAE0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Russhi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['minimum_nights',
                                             'availability_365',
                                             'accommodates'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'room_type',
                                             'District', 'rental_type',
                                             'license_disclosed'],
                                    transfor...
                 TransformerWrapper(include=['room_type', 'District',
                                             'license_disclosed'],
                                    transformer=OneHotEncoder(cols=['room_type',
                                                                    'District',
                                                                    'license_disclosed'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['neighbourhood'],
                                    transformer=TargetEncoder(cols=['neighbourhood'],
                                                              handle_missing='return_nan'))),
                ('trained_model', HuberRegressor(alpha=0.15, epsilon=1.1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000121A2F2BD00>)
2023-06-27 17:47:03,400:INFO:Checking exceptions
2023-06-27 17:47:03,400:INFO:Preloading libraries
2023-06-27 17:47:03,400:INFO:Set up data.
2023-06-27 17:47:03,405:INFO:Set up index.
2023-06-27 17:54:00,470:INFO:Initializing load_model()
2023-06-27 17:54:00,471:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-27 17:54:00,503:INFO:Initializing predict_model()
2023-06-27 17:54:00,503:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000012184920EB0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Russhi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['minimum_nights',
                                             'availability_365',
                                             'accommodates'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'room_type',
                                             'District', 'rental_type',
                                             'license_disclosed'],
                                    transfor...
                 TransformerWrapper(include=['room_type', 'District',
                                             'license_disclosed'],
                                    transformer=OneHotEncoder(cols=['room_type',
                                                                    'District',
                                                                    'license_disclosed'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['neighbourhood'],
                                    transformer=TargetEncoder(cols=['neighbourhood'],
                                                              handle_missing='return_nan'))),
                ('trained_model', HuberRegressor(alpha=0.15, epsilon=1.1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000121801DB910>)
2023-06-27 17:54:00,503:INFO:Checking exceptions
2023-06-27 17:54:00,503:INFO:Preloading libraries
2023-06-27 17:54:00,503:INFO:Set up data.
2023-06-27 17:54:00,506:INFO:Set up index.
2023-06-27 17:54:11,089:INFO:Initializing load_model()
2023-06-27 17:54:11,089:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-27 17:54:11,119:INFO:Initializing predict_model()
2023-06-27 17:54:11,119:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001218485D2A0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Russhi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['minimum_nights',
                                             'availability_365',
                                             'accommodates'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'room_type',
                                             'District', 'rental_type',
                                             'license_disclosed'],
                                    transfor...
                 TransformerWrapper(include=['room_type', 'District',
                                             'license_disclosed'],
                                    transformer=OneHotEncoder(cols=['room_type',
                                                                    'District',
                                                                    'license_disclosed'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['neighbourhood'],
                                    transformer=TargetEncoder(cols=['neighbourhood'],
                                                              handle_missing='return_nan'))),
                ('trained_model', HuberRegressor(alpha=0.15, epsilon=1.1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001218489C8B0>)
2023-06-27 17:54:11,119:INFO:Checking exceptions
2023-06-27 17:54:11,119:INFO:Preloading libraries
2023-06-27 17:54:11,119:INFO:Set up data.
2023-06-27 17:54:11,122:INFO:Set up index.
2023-06-27 17:54:16,784:INFO:Initializing load_model()
2023-06-27 17:54:16,784:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-27 17:54:16,820:INFO:Initializing predict_model()
2023-06-27 17:54:16,820:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000012183A0E650>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Russhi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['minimum_nights',
                                             'availability_365',
                                             'accommodates'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'room_type',
                                             'District', 'rental_type',
                                             'license_disclosed'],
                                    transfor...
                 TransformerWrapper(include=['room_type', 'District',
                                             'license_disclosed'],
                                    transformer=OneHotEncoder(cols=['room_type',
                                                                    'District',
                                                                    'license_disclosed'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['neighbourhood'],
                                    transformer=TargetEncoder(cols=['neighbourhood'],
                                                              handle_missing='return_nan'))),
                ('trained_model', HuberRegressor(alpha=0.15, epsilon=1.1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000012210324670>)
2023-06-27 17:54:16,820:INFO:Checking exceptions
2023-06-27 17:54:16,821:INFO:Preloading libraries
2023-06-27 17:54:16,821:INFO:Set up data.
2023-06-27 17:54:16,824:INFO:Set up index.
2023-06-27 17:54:19,313:INFO:Initializing load_model()
2023-06-27 17:54:19,313:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-27 17:54:19,341:INFO:Initializing predict_model()
2023-06-27 17:54:19,341:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000121801997E0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Russhi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['minimum_nights',
                                             'availability_365',
                                             'accommodates'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'room_type',
                                             'District', 'rental_type',
                                             'license_disclosed'],
                                    transfor...
                 TransformerWrapper(include=['room_type', 'District',
                                             'license_disclosed'],
                                    transformer=OneHotEncoder(cols=['room_type',
                                                                    'District',
                                                                    'license_disclosed'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['neighbourhood'],
                                    transformer=TargetEncoder(cols=['neighbourhood'],
                                                              handle_missing='return_nan'))),
                ('trained_model', HuberRegressor(alpha=0.15, epsilon=1.1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000121A2F29BD0>)
2023-06-27 17:54:19,341:INFO:Checking exceptions
2023-06-27 17:54:19,341:INFO:Preloading libraries
2023-06-27 17:54:19,342:INFO:Set up data.
2023-06-27 17:54:19,344:INFO:Set up index.
2023-06-27 17:54:21,211:INFO:Initializing load_model()
2023-06-27 17:54:21,211:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-27 17:54:21,241:INFO:Initializing predict_model()
2023-06-27 17:54:21,241:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000121FF9AC040>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Russhi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['minimum_nights',
                                             'availability_365',
                                             'accommodates'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'room_type',
                                             'District', 'rental_type',
                                             'license_disclosed'],
                                    transfor...
                 TransformerWrapper(include=['room_type', 'District',
                                             'license_disclosed'],
                                    transformer=OneHotEncoder(cols=['room_type',
                                                                    'District',
                                                                    'license_disclosed'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['neighbourhood'],
                                    transformer=TargetEncoder(cols=['neighbourhood'],
                                                              handle_missing='return_nan'))),
                ('trained_model', HuberRegressor(alpha=0.15, epsilon=1.1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000012210324670>)
2023-06-27 17:54:21,241:INFO:Checking exceptions
2023-06-27 17:54:21,241:INFO:Preloading libraries
2023-06-27 17:54:21,241:INFO:Set up data.
2023-06-27 17:54:21,244:INFO:Set up index.
2023-06-27 17:54:25,824:INFO:Initializing load_model()
2023-06-27 17:54:25,825:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-27 17:54:25,854:INFO:Initializing predict_model()
2023-06-27 17:54:25,854:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001219C6745E0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Russhi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['minimum_nights',
                                             'availability_365',
                                             'accommodates'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'room_type',
                                             'District', 'rental_type',
                                             'license_disclosed'],
                                    transfor...
                 TransformerWrapper(include=['room_type', 'District',
                                             'license_disclosed'],
                                    transformer=OneHotEncoder(cols=['room_type',
                                                                    'District',
                                                                    'license_disclosed'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['neighbourhood'],
                                    transformer=TargetEncoder(cols=['neighbourhood'],
                                                              handle_missing='return_nan'))),
                ('trained_model', HuberRegressor(alpha=0.15, epsilon=1.1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000012183C96680>)
2023-06-27 17:54:25,855:INFO:Checking exceptions
2023-06-27 17:54:25,855:INFO:Preloading libraries
2023-06-27 17:54:25,855:INFO:Set up data.
2023-06-27 17:54:25,857:INFO:Set up index.
2023-06-27 17:54:31,478:INFO:Initializing load_model()
2023-06-27 17:54:31,479:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-27 17:54:31,521:INFO:Initializing predict_model()
2023-06-27 17:54:31,521:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000122029B9B40>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Russhi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['minimum_nights',
                                             'availability_365',
                                             'accommodates'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'room_type',
                                             'District', 'rental_type',
                                             'license_disclosed'],
                                    transfor...
                 TransformerWrapper(include=['room_type', 'District',
                                             'license_disclosed'],
                                    transformer=OneHotEncoder(cols=['room_type',
                                                                    'District',
                                                                    'license_disclosed'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['neighbourhood'],
                                    transformer=TargetEncoder(cols=['neighbourhood'],
                                                              handle_missing='return_nan'))),
                ('trained_model', HuberRegressor(alpha=0.15, epsilon=1.1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000121801DB910>)
2023-06-27 17:54:31,522:INFO:Checking exceptions
2023-06-27 17:54:31,522:INFO:Preloading libraries
2023-06-27 17:54:31,522:INFO:Set up data.
2023-06-27 17:54:31,525:INFO:Set up index.
2023-06-27 17:54:39,455:INFO:Initializing load_model()
2023-06-27 17:54:39,455:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-27 17:54:39,489:INFO:Initializing predict_model()
2023-06-27 17:54:39,490:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001219C675F90>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Russhi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['minimum_nights',
                                             'availability_365',
                                             'accommodates'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'room_type',
                                             'District', 'rental_type',
                                             'license_disclosed'],
                                    transfor...
                 TransformerWrapper(include=['room_type', 'District',
                                             'license_disclosed'],
                                    transformer=OneHotEncoder(cols=['room_type',
                                                                    'District',
                                                                    'license_disclosed'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['neighbourhood'],
                                    transformer=TargetEncoder(cols=['neighbourhood'],
                                                              handle_missing='return_nan'))),
                ('trained_model', HuberRegressor(alpha=0.15, epsilon=1.1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000121FF945D80>)
2023-06-27 17:54:39,490:INFO:Checking exceptions
2023-06-27 17:54:39,490:INFO:Preloading libraries
2023-06-27 17:54:39,490:INFO:Set up data.
2023-06-27 17:54:39,493:INFO:Set up index.
2023-06-27 17:54:43,601:INFO:Initializing load_model()
2023-06-27 17:54:43,601:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-27 17:54:43,636:INFO:Initializing predict_model()
2023-06-27 17:54:43,636:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000121804D6740>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Russhi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['minimum_nights',
                                             'availability_365',
                                             'accommodates'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'room_type',
                                             'District', 'rental_type',
                                             'license_disclosed'],
                                    transfor...
                 TransformerWrapper(include=['room_type', 'District',
                                             'license_disclosed'],
                                    transformer=OneHotEncoder(cols=['room_type',
                                                                    'District',
                                                                    'license_disclosed'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['neighbourhood'],
                                    transformer=TargetEncoder(cols=['neighbourhood'],
                                                              handle_missing='return_nan'))),
                ('trained_model', HuberRegressor(alpha=0.15, epsilon=1.1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001218489C8B0>)
2023-06-27 17:54:43,636:INFO:Checking exceptions
2023-06-27 17:54:43,636:INFO:Preloading libraries
2023-06-27 17:54:43,637:INFO:Set up data.
2023-06-27 17:54:43,639:INFO:Set up index.
2023-06-27 17:54:51,318:INFO:Initializing load_model()
2023-06-27 17:54:51,319:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-27 17:54:51,358:INFO:Initializing predict_model()
2023-06-27 17:54:51,359:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001218FDB5E70>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Russhi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['minimum_nights',
                                             'availability_365',
                                             'accommodates'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'room_type',
                                             'District', 'rental_type',
                                             'license_disclosed'],
                                    transfor...
                 TransformerWrapper(include=['room_type', 'District',
                                             'license_disclosed'],
                                    transformer=OneHotEncoder(cols=['room_type',
                                                                    'District',
                                                                    'license_disclosed'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['neighbourhood'],
                                    transformer=TargetEncoder(cols=['neighbourhood'],
                                                              handle_missing='return_nan'))),
                ('trained_model', HuberRegressor(alpha=0.15, epsilon=1.1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000012210324670>)
2023-06-27 17:54:51,359:INFO:Checking exceptions
2023-06-27 17:54:51,359:INFO:Preloading libraries
2023-06-27 17:54:51,359:INFO:Set up data.
2023-06-27 17:54:51,363:INFO:Set up index.
2023-06-27 17:54:56,777:INFO:Initializing load_model()
2023-06-27 17:54:56,777:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-27 17:54:56,815:INFO:Initializing predict_model()
2023-06-27 17:54:56,815:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000121A1CE6980>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Russhi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['minimum_nights',
                                             'availability_365',
                                             'accommodates'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'room_type',
                                             'District', 'rental_type',
                                             'license_disclosed'],
                                    transfor...
                 TransformerWrapper(include=['room_type', 'District',
                                             'license_disclosed'],
                                    transformer=OneHotEncoder(cols=['room_type',
                                                                    'District',
                                                                    'license_disclosed'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['neighbourhood'],
                                    transformer=TargetEncoder(cols=['neighbourhood'],
                                                              handle_missing='return_nan'))),
                ('trained_model', HuberRegressor(alpha=0.15, epsilon=1.1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000121801DB910>)
2023-06-27 17:54:56,815:INFO:Checking exceptions
2023-06-27 17:54:56,815:INFO:Preloading libraries
2023-06-27 17:54:56,815:INFO:Set up data.
2023-06-27 17:54:56,818:INFO:Set up index.
2023-06-27 17:55:03,149:INFO:Initializing load_model()
2023-06-27 17:55:03,149:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-27 17:55:03,183:INFO:Initializing predict_model()
2023-06-27 17:55:03,183:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000121823777C0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Russhi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['minimum_nights',
                                             'availability_365',
                                             'accommodates'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'room_type',
                                             'District', 'rental_type',
                                             'license_disclosed'],
                                    transfor...
                 TransformerWrapper(include=['room_type', 'District',
                                             'license_disclosed'],
                                    transformer=OneHotEncoder(cols=['room_type',
                                                                    'District',
                                                                    'license_disclosed'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['neighbourhood'],
                                    transformer=TargetEncoder(cols=['neighbourhood'],
                                                              handle_missing='return_nan'))),
                ('trained_model', HuberRegressor(alpha=0.15, epsilon=1.1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000121A2F2A560>)
2023-06-27 17:55:03,183:INFO:Checking exceptions
2023-06-27 17:55:03,183:INFO:Preloading libraries
2023-06-27 17:55:03,183:INFO:Set up data.
2023-06-27 17:55:03,186:INFO:Set up index.
2023-06-27 17:58:37,411:INFO:Initializing load_model()
2023-06-27 17:58:37,411:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-27 17:58:37,455:INFO:Initializing predict_model()
2023-06-27 17:58:37,455:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000121A1CE77C0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Russhi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['minimum_nights',
                                             'availability_365',
                                             'accommodates'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'room_type',
                                             'District', 'rental_type',
                                             'license_disclosed'],
                                    transfor...
                 TransformerWrapper(include=['room_type', 'District',
                                             'license_disclosed'],
                                    transformer=OneHotEncoder(cols=['room_type',
                                                                    'District',
                                                                    'license_disclosed'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['neighbourhood'],
                                    transformer=TargetEncoder(cols=['neighbourhood'],
                                                              handle_missing='return_nan'))),
                ('trained_model', HuberRegressor(alpha=0.15, epsilon=1.1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000121A2F2AC20>)
2023-06-27 17:58:37,457:INFO:Checking exceptions
2023-06-27 17:58:37,457:INFO:Preloading libraries
2023-06-27 17:58:37,457:INFO:Set up data.
2023-06-27 17:58:37,460:INFO:Set up index.
2023-06-27 18:05:06,902:INFO:Initializing load_model()
2023-06-27 18:05:06,902:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-27 18:05:06,935:INFO:Initializing predict_model()
2023-06-27 18:05:06,935:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000121B42CF760>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Russhi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['minimum_nights',
                                             'availability_365',
                                             'accommodates'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'room_type',
                                             'District', 'rental_type',
                                             'license_disclosed'],
                                    transfor...
                 TransformerWrapper(include=['room_type', 'District',
                                             'license_disclosed'],
                                    transformer=OneHotEncoder(cols=['room_type',
                                                                    'District',
                                                                    'license_disclosed'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['neighbourhood'],
                                    transformer=TargetEncoder(cols=['neighbourhood'],
                                                              handle_missing='return_nan'))),
                ('trained_model', HuberRegressor(alpha=0.15, epsilon=1.1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000012200C084C0>)
2023-06-27 18:05:06,935:INFO:Checking exceptions
2023-06-27 18:05:06,935:INFO:Preloading libraries
2023-06-27 18:05:06,935:INFO:Set up data.
2023-06-27 18:05:06,938:INFO:Set up index.
2023-06-28 09:04:55,664:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-28 09:04:55,664:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-28 09:04:55,664:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-28 09:04:55,664:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-28 09:04:56,929:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-06-28 09:04:57,111:INFO:Initializing load_model()
2023-06-28 09:04:57,111:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-28 09:04:57,158:INFO:Initializing predict_model()
2023-06-28 09:04:57,158:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002302DD9F8B0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Russhi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['minimum_nights',
                                             'availability_365',
                                             'accommodates'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'room_type',
                                             'District', 'rental_type',
                                             'license_disclosed'],
                                    transfor...
                 TransformerWrapper(include=['room_type', 'District',
                                             'license_disclosed'],
                                    transformer=OneHotEncoder(cols=['room_type',
                                                                    'District',
                                                                    'license_disclosed'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['neighbourhood'],
                                    transformer=TargetEncoder(cols=['neighbourhood'],
                                                              handle_missing='return_nan'))),
                ('trained_model', HuberRegressor(alpha=0.15, epsilon=1.1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000230320144C0>)
2023-06-28 09:04:57,158:INFO:Checking exceptions
2023-06-28 09:04:57,159:INFO:Preloading libraries
2023-06-28 09:04:57,159:INFO:Set up data.
2023-06-28 09:04:57,163:INFO:Set up index.
2023-06-28 09:17:40,595:INFO:Initializing load_model()
2023-06-28 09:17:40,595:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-28 09:17:40,635:INFO:Initializing predict_model()
2023-06-28 09:17:40,636:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023033392680>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Russhi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['minimum_nights',
                                             'availability_365',
                                             'accommodates'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'room_type',
                                             'District', 'rental_type',
                                             'license_disclosed'],
                                    transfor...
                 TransformerWrapper(include=['room_type', 'District',
                                             'license_disclosed'],
                                    transformer=OneHotEncoder(cols=['room_type',
                                                                    'District',
                                                                    'license_disclosed'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['neighbourhood'],
                                    transformer=TargetEncoder(cols=['neighbourhood'],
                                                              handle_missing='return_nan'))),
                ('trained_model', HuberRegressor(alpha=0.15, epsilon=1.1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002302BFA5090>)
2023-06-28 09:17:40,636:INFO:Checking exceptions
2023-06-28 09:17:40,636:INFO:Preloading libraries
2023-06-28 09:17:40,636:INFO:Set up data.
2023-06-28 09:17:40,639:INFO:Set up index.
2023-06-28 10:26:27,083:INFO:Initializing load_model()
2023-06-28 10:26:27,083:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-28 10:26:27,113:INFO:Initializing predict_model()
2023-06-28 10:26:27,113:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002302DD9A260>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Russhi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['minimum_nights',
                                             'availability_365',
                                             'accommodates'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'room_type',
                                             'District', 'rental_type',
                                             'license_disclosed'],
                                    transfor...
                 TransformerWrapper(include=['room_type', 'District',
                                             'license_disclosed'],
                                    transformer=OneHotEncoder(cols=['room_type',
                                                                    'District',
                                                                    'license_disclosed'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['neighbourhood'],
                                    transformer=TargetEncoder(cols=['neighbourhood'],
                                                              handle_missing='return_nan'))),
                ('trained_model', HuberRegressor(alpha=0.15, epsilon=1.1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002302B994430>)
2023-06-28 10:26:27,113:INFO:Checking exceptions
2023-06-28 10:26:27,115:INFO:Preloading libraries
2023-06-28 10:26:27,115:INFO:Set up data.
2023-06-28 10:26:27,118:INFO:Set up index.
2023-06-28 10:29:12,258:INFO:Initializing load_model()
2023-06-28 10:29:12,258:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-28 10:29:12,289:INFO:Initializing predict_model()
2023-06-28 10:29:12,289:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000230334172B0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Russhi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['minimum_nights',
                                             'availability_365',
                                             'accommodates'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'room_type',
                                             'District', 'rental_type',
                                             'license_disclosed'],
                                    transfor...
                 TransformerWrapper(include=['room_type', 'District',
                                             'license_disclosed'],
                                    transformer=OneHotEncoder(cols=['room_type',
                                                                    'District',
                                                                    'license_disclosed'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['neighbourhood'],
                                    transformer=TargetEncoder(cols=['neighbourhood'],
                                                              handle_missing='return_nan'))),
                ('trained_model', HuberRegressor(alpha=0.15, epsilon=1.1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002302A83FB50>)
2023-06-28 10:29:12,289:INFO:Checking exceptions
2023-06-28 10:29:12,289:INFO:Preloading libraries
2023-06-28 10:29:12,290:INFO:Set up data.
2023-06-28 10:29:12,293:INFO:Set up index.
2023-06-28 10:29:32,790:INFO:Initializing load_model()
2023-06-28 10:29:32,790:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-28 10:29:32,824:INFO:Initializing predict_model()
2023-06-28 10:29:32,824:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002302BFC1C60>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Russhi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['minimum_nights',
                                             'availability_365',
                                             'accommodates'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'room_type',
                                             'District', 'rental_type',
                                             'license_disclosed'],
                                    transfor...
                 TransformerWrapper(include=['room_type', 'District',
                                             'license_disclosed'],
                                    transformer=OneHotEncoder(cols=['room_type',
                                                                    'District',
                                                                    'license_disclosed'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['neighbourhood'],
                                    transformer=TargetEncoder(cols=['neighbourhood'],
                                                              handle_missing='return_nan'))),
                ('trained_model', HuberRegressor(alpha=0.15, epsilon=1.1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023034D4B130>)
2023-06-28 10:29:32,824:INFO:Checking exceptions
2023-06-28 10:29:32,824:INFO:Preloading libraries
2023-06-28 10:29:32,825:INFO:Set up data.
2023-06-28 10:29:32,829:INFO:Set up index.
2023-06-28 10:29:40,850:INFO:Initializing load_model()
2023-06-28 10:29:40,850:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-28 10:29:40,883:INFO:Initializing predict_model()
2023-06-28 10:29:40,883:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002302DD9ABF0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Russhi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['minimum_nights',
                                             'availability_365',
                                             'accommodates'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'room_type',
                                             'District', 'rental_type',
                                             'license_disclosed'],
                                    transfor...
                 TransformerWrapper(include=['room_type', 'District',
                                             'license_disclosed'],
                                    transformer=OneHotEncoder(cols=['room_type',
                                                                    'District',
                                                                    'license_disclosed'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['neighbourhood'],
                                    transformer=TargetEncoder(cols=['neighbourhood'],
                                                              handle_missing='return_nan'))),
                ('trained_model', HuberRegressor(alpha=0.15, epsilon=1.1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023034D4B130>)
2023-06-28 10:29:40,883:INFO:Checking exceptions
2023-06-28 10:29:40,883:INFO:Preloading libraries
2023-06-28 10:29:40,883:INFO:Set up data.
2023-06-28 10:29:40,887:INFO:Set up index.
2023-06-28 10:29:45,424:INFO:Initializing load_model()
2023-06-28 10:29:45,424:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-28 10:29:45,459:INFO:Initializing predict_model()
2023-06-28 10:29:45,459:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002302DD4E830>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Russhi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['minimum_nights',
                                             'availability_365',
                                             'accommodates'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'room_type',
                                             'District', 'rental_type',
                                             'license_disclosed'],
                                    transfor...
                 TransformerWrapper(include=['room_type', 'District',
                                             'license_disclosed'],
                                    transformer=OneHotEncoder(cols=['room_type',
                                                                    'District',
                                                                    'license_disclosed'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['neighbourhood'],
                                    transformer=TargetEncoder(cols=['neighbourhood'],
                                                              handle_missing='return_nan'))),
                ('trained_model', HuberRegressor(alpha=0.15, epsilon=1.1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002302B9397E0>)
2023-06-28 10:29:45,459:INFO:Checking exceptions
2023-06-28 10:29:45,459:INFO:Preloading libraries
2023-06-28 10:29:45,459:INFO:Set up data.
2023-06-28 10:29:45,462:INFO:Set up index.
2023-06-28 10:29:48,272:INFO:Initializing load_model()
2023-06-28 10:29:48,272:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-28 10:29:48,302:INFO:Initializing predict_model()
2023-06-28 10:29:48,302:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002302B1ABE20>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Russhi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['minimum_nights',
                                             'availability_365',
                                             'accommodates'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'room_type',
                                             'District', 'rental_type',
                                             'license_disclosed'],
                                    transfor...
                 TransformerWrapper(include=['room_type', 'District',
                                             'license_disclosed'],
                                    transformer=OneHotEncoder(cols=['room_type',
                                                                    'District',
                                                                    'license_disclosed'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['neighbourhood'],
                                    transformer=TargetEncoder(cols=['neighbourhood'],
                                                              handle_missing='return_nan'))),
                ('trained_model', HuberRegressor(alpha=0.15, epsilon=1.1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002302B9397E0>)
2023-06-28 10:29:48,302:INFO:Checking exceptions
2023-06-28 10:29:48,302:INFO:Preloading libraries
2023-06-28 10:29:48,302:INFO:Set up data.
2023-06-28 10:29:48,304:INFO:Set up index.
2023-06-28 10:29:51,460:INFO:Initializing load_model()
2023-06-28 10:29:51,460:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-28 10:29:51,491:INFO:Initializing predict_model()
2023-06-28 10:29:51,491:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002302CC77EB0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Russhi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['minimum_nights',
                                             'availability_365',
                                             'accommodates'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'room_type',
                                             'District', 'rental_type',
                                             'license_disclosed'],
                                    transfor...
                 TransformerWrapper(include=['room_type', 'District',
                                             'license_disclosed'],
                                    transformer=OneHotEncoder(cols=['room_type',
                                                                    'District',
                                                                    'license_disclosed'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['neighbourhood'],
                                    transformer=TargetEncoder(cols=['neighbourhood'],
                                                              handle_missing='return_nan'))),
                ('trained_model', HuberRegressor(alpha=0.15, epsilon=1.1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002302B994430>)
2023-06-28 10:29:51,491:INFO:Checking exceptions
2023-06-28 10:29:51,491:INFO:Preloading libraries
2023-06-28 10:29:51,491:INFO:Set up data.
2023-06-28 10:29:51,494:INFO:Set up index.
2023-06-28 10:29:57,449:INFO:Initializing load_model()
2023-06-28 10:29:57,450:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-28 10:29:57,479:INFO:Initializing predict_model()
2023-06-28 10:29:57,479:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002302CC74D30>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Russhi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['minimum_nights',
                                             'availability_365',
                                             'accommodates'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'room_type',
                                             'District', 'rental_type',
                                             'license_disclosed'],
                                    transfor...
                 TransformerWrapper(include=['room_type', 'District',
                                             'license_disclosed'],
                                    transformer=OneHotEncoder(cols=['room_type',
                                                                    'District',
                                                                    'license_disclosed'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['neighbourhood'],
                                    transformer=TargetEncoder(cols=['neighbourhood'],
                                                              handle_missing='return_nan'))),
                ('trained_model', HuberRegressor(alpha=0.15, epsilon=1.1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023034D4BEB0>)
2023-06-28 10:29:57,479:INFO:Checking exceptions
2023-06-28 10:29:57,479:INFO:Preloading libraries
2023-06-28 10:29:57,479:INFO:Set up data.
2023-06-28 10:29:57,483:INFO:Set up index.
2023-06-28 10:30:25,352:INFO:Initializing load_model()
2023-06-28 10:30:25,352:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-28 10:30:25,382:INFO:Initializing predict_model()
2023-06-28 10:30:25,382:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002302FB3F9D0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Russhi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['minimum_nights',
                                             'availability_365',
                                             'accommodates'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'room_type',
                                             'District', 'rental_type',
                                             'license_disclosed'],
                                    transfor...
                 TransformerWrapper(include=['room_type', 'District',
                                             'license_disclosed'],
                                    transformer=OneHotEncoder(cols=['room_type',
                                                                    'District',
                                                                    'license_disclosed'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['neighbourhood'],
                                    transformer=TargetEncoder(cols=['neighbourhood'],
                                                              handle_missing='return_nan'))),
                ('trained_model', HuberRegressor(alpha=0.15, epsilon=1.1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023034D480D0>)
2023-06-28 10:30:25,382:INFO:Checking exceptions
2023-06-28 10:30:25,382:INFO:Preloading libraries
2023-06-28 10:30:25,383:INFO:Set up data.
2023-06-28 10:30:25,386:INFO:Set up index.
2023-06-28 10:30:30,483:INFO:Initializing load_model()
2023-06-28 10:30:30,483:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-28 10:30:30,518:INFO:Initializing predict_model()
2023-06-28 10:30:30,518:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002302FAC4AF0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Russhi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['minimum_nights',
                                             'availability_365',
                                             'accommodates'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'room_type',
                                             'District', 'rental_type',
                                             'license_disclosed'],
                                    transfor...
                 TransformerWrapper(include=['room_type', 'District',
                                             'license_disclosed'],
                                    transformer=OneHotEncoder(cols=['room_type',
                                                                    'District',
                                                                    'license_disclosed'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['neighbourhood'],
                                    transformer=TargetEncoder(cols=['neighbourhood'],
                                                              handle_missing='return_nan'))),
                ('trained_model', HuberRegressor(alpha=0.15, epsilon=1.1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023034D4AB00>)
2023-06-28 10:30:30,518:INFO:Checking exceptions
2023-06-28 10:30:30,518:INFO:Preloading libraries
2023-06-28 10:30:30,518:INFO:Set up data.
2023-06-28 10:30:30,521:INFO:Set up index.
2023-06-28 10:30:36,297:INFO:Initializing load_model()
2023-06-28 10:30:36,297:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-28 10:30:36,331:INFO:Initializing predict_model()
2023-06-28 10:30:36,331:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002302FAC6830>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Russhi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['minimum_nights',
                                             'availability_365',
                                             'accommodates'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'room_type',
                                             'District', 'rental_type',
                                             'license_disclosed'],
                                    transfor...
                 TransformerWrapper(include=['room_type', 'District',
                                             'license_disclosed'],
                                    transformer=OneHotEncoder(cols=['room_type',
                                                                    'District',
                                                                    'license_disclosed'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['neighbourhood'],
                                    transformer=TargetEncoder(cols=['neighbourhood'],
                                                              handle_missing='return_nan'))),
                ('trained_model', HuberRegressor(alpha=0.15, epsilon=1.1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023034D4BEB0>)
2023-06-28 10:30:36,331:INFO:Checking exceptions
2023-06-28 10:30:36,331:INFO:Preloading libraries
2023-06-28 10:30:36,331:INFO:Set up data.
2023-06-28 10:30:36,334:INFO:Set up index.
2023-06-28 10:30:42,767:INFO:Initializing load_model()
2023-06-28 10:30:42,767:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-28 10:30:42,802:INFO:Initializing predict_model()
2023-06-28 10:30:42,802:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002303069C400>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Russhi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['minimum_nights',
                                             'availability_365',
                                             'accommodates'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'room_type',
                                             'District', 'rental_type',
                                             'license_disclosed'],
                                    transfor...
                 TransformerWrapper(include=['room_type', 'District',
                                             'license_disclosed'],
                                    transformer=OneHotEncoder(cols=['room_type',
                                                                    'District',
                                                                    'license_disclosed'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['neighbourhood'],
                                    transformer=TargetEncoder(cols=['neighbourhood'],
                                                              handle_missing='return_nan'))),
                ('trained_model', HuberRegressor(alpha=0.15, epsilon=1.1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023034D4BEB0>)
2023-06-28 10:30:42,803:INFO:Checking exceptions
2023-06-28 10:30:42,803:INFO:Preloading libraries
2023-06-28 10:30:42,803:INFO:Set up data.
2023-06-28 10:30:42,805:INFO:Set up index.
2023-06-28 10:30:52,140:INFO:Initializing load_model()
2023-06-28 10:30:52,140:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-28 10:30:52,172:INFO:Initializing predict_model()
2023-06-28 10:30:52,172:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002302DD9F8E0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Russhi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['minimum_nights',
                                             'availability_365',
                                             'accommodates'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'room_type',
                                             'District', 'rental_type',
                                             'license_disclosed'],
                                    transfor...
                 TransformerWrapper(include=['room_type', 'District',
                                             'license_disclosed'],
                                    transformer=OneHotEncoder(cols=['room_type',
                                                                    'District',
                                                                    'license_disclosed'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['neighbourhood'],
                                    transformer=TargetEncoder(cols=['neighbourhood'],
                                                              handle_missing='return_nan'))),
                ('trained_model', HuberRegressor(alpha=0.15, epsilon=1.1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002302B994430>)
2023-06-28 10:30:52,172:INFO:Checking exceptions
2023-06-28 10:30:52,172:INFO:Preloading libraries
2023-06-28 10:30:52,172:INFO:Set up data.
2023-06-28 10:30:52,176:INFO:Set up index.
2023-06-28 11:57:05,551:INFO:Initializing load_model()
2023-06-28 11:57:05,551:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-28 11:57:05,580:INFO:Initializing predict_model()
2023-06-28 11:57:05,580:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002302CC76FB0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Russhi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['minimum_nights',
                                             'availability_365',
                                             'accommodates'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'room_type',
                                             'District', 'rental_type',
                                             'license_disclosed'],
                                    transfor...
                 TransformerWrapper(include=['room_type', 'District',
                                             'license_disclosed'],
                                    transformer=OneHotEncoder(cols=['room_type',
                                                                    'District',
                                                                    'license_disclosed'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['neighbourhood'],
                                    transformer=TargetEncoder(cols=['neighbourhood'],
                                                              handle_missing='return_nan'))),
                ('trained_model', HuberRegressor(alpha=0.15, epsilon=1.1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000230349B3BE0>)
2023-06-28 11:57:05,580:INFO:Checking exceptions
2023-06-28 11:57:05,580:INFO:Preloading libraries
2023-06-28 11:57:05,581:INFO:Set up data.
2023-06-28 11:57:05,584:INFO:Set up index.
2023-06-28 12:52:22,816:INFO:Initializing load_model()
2023-06-28 12:52:22,817:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-28 12:52:22,845:INFO:Initializing predict_model()
2023-06-28 12:52:22,845:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002302B1D8040>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Russhi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['minimum_nights',
                                             'availability_365',
                                             'accommodates'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'room_type',
                                             'District', 'rental_type',
                                             'license_disclosed'],
                                    transfor...
                 TransformerWrapper(include=['room_type', 'District',
                                             'license_disclosed'],
                                    transformer=OneHotEncoder(cols=['room_type',
                                                                    'District',
                                                                    'license_disclosed'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['neighbourhood'],
                                    transformer=TargetEncoder(cols=['neighbourhood'],
                                                              handle_missing='return_nan'))),
                ('trained_model', HuberRegressor(alpha=0.15, epsilon=1.1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002302D603E20>)
2023-06-28 12:52:22,845:INFO:Checking exceptions
2023-06-28 12:52:22,845:INFO:Preloading libraries
2023-06-28 12:52:22,846:INFO:Set up data.
2023-06-28 12:52:22,849:INFO:Set up index.
2023-06-28 13:05:35,640:INFO:Initializing load_model()
2023-06-28 13:05:35,640:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-28 13:05:35,669:INFO:Initializing predict_model()
2023-06-28 13:05:35,669:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002302CC77820>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Russhi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['minimum_nights',
                                             'availability_365',
                                             'accommodates'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'room_type',
                                             'District', 'rental_type',
                                             'license_disclosed'],
                                    transfor...
                 TransformerWrapper(include=['room_type', 'District',
                                             'license_disclosed'],
                                    transformer=OneHotEncoder(cols=['room_type',
                                                                    'District',
                                                                    'license_disclosed'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['neighbourhood'],
                                    transformer=TargetEncoder(cols=['neighbourhood'],
                                                              handle_missing='return_nan'))),
                ('trained_model', HuberRegressor(alpha=0.15, epsilon=1.1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002302B9397E0>)
2023-06-28 13:05:35,669:INFO:Checking exceptions
2023-06-28 13:05:35,669:INFO:Preloading libraries
2023-06-28 13:05:35,670:INFO:Set up data.
2023-06-28 13:05:35,672:INFO:Set up index.
2023-06-28 13:05:39,357:INFO:Initializing load_model()
2023-06-28 13:05:39,357:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-28 13:05:39,386:INFO:Initializing predict_model()
2023-06-28 13:05:39,386:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002302CE15390>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Russhi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['minimum_nights',
                                             'availability_365',
                                             'accommodates'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'room_type',
                                             'District', 'rental_type',
                                             'license_disclosed'],
                                    transfor...
                 TransformerWrapper(include=['room_type', 'District',
                                             'license_disclosed'],
                                    transformer=OneHotEncoder(cols=['room_type',
                                                                    'District',
                                                                    'license_disclosed'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['neighbourhood'],
                                    transformer=TargetEncoder(cols=['neighbourhood'],
                                                              handle_missing='return_nan'))),
                ('trained_model', HuberRegressor(alpha=0.15, epsilon=1.1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023033C3E950>)
2023-06-28 13:05:39,386:INFO:Checking exceptions
2023-06-28 13:05:39,386:INFO:Preloading libraries
2023-06-28 13:05:39,386:INFO:Set up data.
2023-06-28 13:05:39,389:INFO:Set up index.
2023-06-28 13:05:42,358:INFO:Initializing load_model()
2023-06-28 13:05:42,358:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-28 13:05:42,386:INFO:Initializing predict_model()
2023-06-28 13:05:42,386:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002302C021570>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Russhi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['minimum_nights',
                                             'availability_365',
                                             'accommodates'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'room_type',
                                             'District', 'rental_type',
                                             'license_disclosed'],
                                    transfor...
                 TransformerWrapper(include=['room_type', 'District',
                                             'license_disclosed'],
                                    transformer=OneHotEncoder(cols=['room_type',
                                                                    'District',
                                                                    'license_disclosed'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['neighbourhood'],
                                    transformer=TargetEncoder(cols=['neighbourhood'],
                                                              handle_missing='return_nan'))),
                ('trained_model', HuberRegressor(alpha=0.15, epsilon=1.1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023033C3C040>)
2023-06-28 13:05:42,386:INFO:Checking exceptions
2023-06-28 13:05:42,386:INFO:Preloading libraries
2023-06-28 13:05:42,386:INFO:Set up data.
2023-06-28 13:05:42,389:INFO:Set up index.
2023-06-28 13:05:48,324:INFO:Initializing load_model()
2023-06-28 13:05:48,324:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-28 13:05:48,371:INFO:Initializing predict_model()
2023-06-28 13:05:48,371:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002302B3EA4D0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Russhi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['minimum_nights',
                                             'availability_365',
                                             'accommodates'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'room_type',
                                             'District', 'rental_type',
                                             'license_disclosed'],
                                    transfor...
                 TransformerWrapper(include=['room_type', 'District',
                                             'license_disclosed'],
                                    transformer=OneHotEncoder(cols=['room_type',
                                                                    'District',
                                                                    'license_disclosed'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['neighbourhood'],
                                    transformer=TargetEncoder(cols=['neighbourhood'],
                                                              handle_missing='return_nan'))),
                ('trained_model', HuberRegressor(alpha=0.15, epsilon=1.1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002302CD28F70>)
2023-06-28 13:05:48,371:INFO:Checking exceptions
2023-06-28 13:05:48,371:INFO:Preloading libraries
2023-06-28 13:05:48,371:INFO:Set up data.
2023-06-28 13:05:48,375:INFO:Set up index.
2023-06-28 13:06:41,123:INFO:Initializing load_model()
2023-06-28 13:06:41,123:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-28 13:06:41,172:INFO:Initializing predict_model()
2023-06-28 13:06:41,172:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023033393670>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Russhi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['minimum_nights',
                                             'availability_365',
                                             'accommodates'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'room_type',
                                             'District', 'rental_type',
                                             'license_disclosed'],
                                    transfor...
                 TransformerWrapper(include=['room_type', 'District',
                                             'license_disclosed'],
                                    transformer=OneHotEncoder(cols=['room_type',
                                                                    'District',
                                                                    'license_disclosed'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['neighbourhood'],
                                    transformer=TargetEncoder(cols=['neighbourhood'],
                                                              handle_missing='return_nan'))),
                ('trained_model', HuberRegressor(alpha=0.15, epsilon=1.1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002302CD28F70>)
2023-06-28 13:06:41,172:INFO:Checking exceptions
2023-06-28 13:06:41,173:INFO:Preloading libraries
2023-06-28 13:06:41,173:INFO:Set up data.
2023-06-28 13:06:41,175:INFO:Set up index.
2023-06-28 13:08:30,589:INFO:Initializing load_model()
2023-06-28 13:08:30,590:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-28 13:08:30,626:INFO:Initializing predict_model()
2023-06-28 13:08:30,626:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002302DD4FC10>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Russhi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['minimum_nights',
                                             'availability_365',
                                             'accommodates'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'room_type',
                                             'District', 'rental_type',
                                             'license_disclosed'],
                                    transfor...
                 TransformerWrapper(include=['room_type', 'District',
                                             'license_disclosed'],
                                    transformer=OneHotEncoder(cols=['room_type',
                                                                    'District',
                                                                    'license_disclosed'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['neighbourhood'],
                                    transformer=TargetEncoder(cols=['neighbourhood'],
                                                              handle_missing='return_nan'))),
                ('trained_model', HuberRegressor(alpha=0.15, epsilon=1.1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002302CD293F0>)
2023-06-28 13:08:30,626:INFO:Checking exceptions
2023-06-28 13:08:30,626:INFO:Preloading libraries
2023-06-28 13:08:30,626:INFO:Set up data.
2023-06-28 13:08:30,629:INFO:Set up index.
2023-06-28 13:08:36,497:INFO:Initializing load_model()
2023-06-28 13:08:36,498:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-28 13:08:36,530:INFO:Initializing predict_model()
2023-06-28 13:08:36,531:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002302DD4EB30>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Russhi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['minimum_nights',
                                             'availability_365',
                                             'accommodates'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'room_type',
                                             'District', 'rental_type',
                                             'license_disclosed'],
                                    transfor...
                 TransformerWrapper(include=['room_type', 'District',
                                             'license_disclosed'],
                                    transformer=OneHotEncoder(cols=['room_type',
                                                                    'District',
                                                                    'license_disclosed'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['neighbourhood'],
                                    transformer=TargetEncoder(cols=['neighbourhood'],
                                                              handle_missing='return_nan'))),
                ('trained_model', HuberRegressor(alpha=0.15, epsilon=1.1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023033C3D240>)
2023-06-28 13:08:36,531:INFO:Checking exceptions
2023-06-28 13:08:36,531:INFO:Preloading libraries
2023-06-28 13:08:36,531:INFO:Set up data.
2023-06-28 13:08:36,534:INFO:Set up index.
2023-06-28 13:08:36,765:INFO:Initializing load_model()
2023-06-28 13:08:36,765:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-28 13:08:36,795:INFO:Initializing predict_model()
2023-06-28 13:08:36,795:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002302DD4E170>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Russhi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['minimum_nights',
                                             'availability_365',
                                             'accommodates'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'room_type',
                                             'District', 'rental_type',
                                             'license_disclosed'],
                                    transfor...
                 TransformerWrapper(include=['room_type', 'District',
                                             'license_disclosed'],
                                    transformer=OneHotEncoder(cols=['room_type',
                                                                    'District',
                                                                    'license_disclosed'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['neighbourhood'],
                                    transformer=TargetEncoder(cols=['neighbourhood'],
                                                              handle_missing='return_nan'))),
                ('trained_model', HuberRegressor(alpha=0.15, epsilon=1.1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023033C3E0E0>)
2023-06-28 13:08:36,795:INFO:Checking exceptions
2023-06-28 13:08:36,795:INFO:Preloading libraries
2023-06-28 13:08:36,795:INFO:Set up data.
2023-06-28 13:08:36,799:INFO:Set up index.
2023-06-28 13:08:36,964:INFO:Initializing load_model()
2023-06-28 13:08:36,965:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-28 13:08:36,991:INFO:Initializing predict_model()
2023-06-28 13:08:36,991:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002302DD4E560>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Russhi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['minimum_nights',
                                             'availability_365',
                                             'accommodates'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'room_type',
                                             'District', 'rental_type',
                                             'license_disclosed'],
                                    transfor...
                 TransformerWrapper(include=['room_type', 'District',
                                             'license_disclosed'],
                                    transformer=OneHotEncoder(cols=['room_type',
                                                                    'District',
                                                                    'license_disclosed'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['neighbourhood'],
                                    transformer=TargetEncoder(cols=['neighbourhood'],
                                                              handle_missing='return_nan'))),
                ('trained_model', HuberRegressor(alpha=0.15, epsilon=1.1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023033C3D360>)
2023-06-28 13:08:36,991:INFO:Checking exceptions
2023-06-28 13:08:36,991:INFO:Preloading libraries
2023-06-28 13:08:36,992:INFO:Set up data.
2023-06-28 13:08:36,994:INFO:Set up index.
2023-06-28 13:08:37,166:INFO:Initializing load_model()
2023-06-28 13:08:37,166:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-28 13:08:37,192:INFO:Initializing predict_model()
2023-06-28 13:08:37,194:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002302FAC7790>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Russhi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['minimum_nights',
                                             'availability_365',
                                             'accommodates'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'room_type',
                                             'District', 'rental_type',
                                             'license_disclosed'],
                                    transfor...
                 TransformerWrapper(include=['room_type', 'District',
                                             'license_disclosed'],
                                    transformer=OneHotEncoder(cols=['room_type',
                                                                    'District',
                                                                    'license_disclosed'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['neighbourhood'],
                                    transformer=TargetEncoder(cols=['neighbourhood'],
                                                              handle_missing='return_nan'))),
                ('trained_model', HuberRegressor(alpha=0.15, epsilon=1.1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023033C3F880>)
2023-06-28 13:08:37,194:INFO:Checking exceptions
2023-06-28 13:08:37,194:INFO:Preloading libraries
2023-06-28 13:08:37,194:INFO:Set up data.
2023-06-28 13:08:37,197:INFO:Set up index.
2023-06-28 13:08:37,369:INFO:Initializing load_model()
2023-06-28 13:08:37,369:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-28 13:08:37,399:INFO:Initializing predict_model()
2023-06-28 13:08:37,399:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002302FAC72B0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Russhi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['minimum_nights',
                                             'availability_365',
                                             'accommodates'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'room_type',
                                             'District', 'rental_type',
                                             'license_disclosed'],
                                    transfor...
                 TransformerWrapper(include=['room_type', 'District',
                                             'license_disclosed'],
                                    transformer=OneHotEncoder(cols=['room_type',
                                                                    'District',
                                                                    'license_disclosed'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['neighbourhood'],
                                    transformer=TargetEncoder(cols=['neighbourhood'],
                                                              handle_missing='return_nan'))),
                ('trained_model', HuberRegressor(alpha=0.15, epsilon=1.1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023033C3F490>)
2023-06-28 13:08:37,399:INFO:Checking exceptions
2023-06-28 13:08:37,399:INFO:Preloading libraries
2023-06-28 13:08:37,399:INFO:Set up data.
2023-06-28 13:08:37,402:INFO:Set up index.
2023-06-28 13:08:37,576:INFO:Initializing load_model()
2023-06-28 13:08:37,576:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-28 13:08:37,602:INFO:Initializing predict_model()
2023-06-28 13:08:37,603:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002302C0AF430>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Russhi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['minimum_nights',
                                             'availability_365',
                                             'accommodates'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'room_type',
                                             'District', 'rental_type',
                                             'license_disclosed'],
                                    transfor...
                 TransformerWrapper(include=['room_type', 'District',
                                             'license_disclosed'],
                                    transformer=OneHotEncoder(cols=['room_type',
                                                                    'District',
                                                                    'license_disclosed'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['neighbourhood'],
                                    transformer=TargetEncoder(cols=['neighbourhood'],
                                                              handle_missing='return_nan'))),
                ('trained_model', HuberRegressor(alpha=0.15, epsilon=1.1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023033C3FAC0>)
2023-06-28 13:08:37,603:INFO:Checking exceptions
2023-06-28 13:08:37,603:INFO:Preloading libraries
2023-06-28 13:08:37,604:INFO:Set up data.
2023-06-28 13:08:37,606:INFO:Set up index.
2023-06-28 13:08:38,165:INFO:Initializing load_model()
2023-06-28 13:08:38,165:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-28 13:08:38,191:INFO:Initializing predict_model()
2023-06-28 13:08:38,191:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002302CCFC670>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Russhi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['minimum_nights',
                                             'availability_365',
                                             'accommodates'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'room_type',
                                             'District', 'rental_type',
                                             'license_disclosed'],
                                    transfor...
                 TransformerWrapper(include=['room_type', 'District',
                                             'license_disclosed'],
                                    transformer=OneHotEncoder(cols=['room_type',
                                                                    'District',
                                                                    'license_disclosed'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['neighbourhood'],
                                    transformer=TargetEncoder(cols=['neighbourhood'],
                                                              handle_missing='return_nan'))),
                ('trained_model', HuberRegressor(alpha=0.15, epsilon=1.1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023033C3E290>)
2023-06-28 13:08:38,192:INFO:Checking exceptions
2023-06-28 13:08:38,192:INFO:Preloading libraries
2023-06-28 13:08:38,192:INFO:Set up data.
2023-06-28 13:08:38,195:INFO:Set up index.
2023-06-28 13:08:38,377:INFO:Initializing load_model()
2023-06-28 13:08:38,377:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-28 13:08:38,405:INFO:Initializing predict_model()
2023-06-28 13:08:38,405:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002302CCFF970>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Russhi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['minimum_nights',
                                             'availability_365',
                                             'accommodates'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'room_type',
                                             'District', 'rental_type',
                                             'license_disclosed'],
                                    transfor...
                 TransformerWrapper(include=['room_type', 'District',
                                             'license_disclosed'],
                                    transformer=OneHotEncoder(cols=['room_type',
                                                                    'District',
                                                                    'license_disclosed'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['neighbourhood'],
                                    transformer=TargetEncoder(cols=['neighbourhood'],
                                                              handle_missing='return_nan'))),
                ('trained_model', HuberRegressor(alpha=0.15, epsilon=1.1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023033C3E9E0>)
2023-06-28 13:08:38,405:INFO:Checking exceptions
2023-06-28 13:08:38,405:INFO:Preloading libraries
2023-06-28 13:08:38,405:INFO:Set up data.
2023-06-28 13:08:38,408:INFO:Set up index.
2023-06-28 13:08:38,575:INFO:Initializing load_model()
2023-06-28 13:08:38,575:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-28 13:08:38,602:INFO:Initializing predict_model()
2023-06-28 13:08:38,602:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002302A89F700>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Russhi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['minimum_nights',
                                             'availability_365',
                                             'accommodates'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'room_type',
                                             'District', 'rental_type',
                                             'license_disclosed'],
                                    transfor...
                 TransformerWrapper(include=['room_type', 'District',
                                             'license_disclosed'],
                                    transformer=OneHotEncoder(cols=['room_type',
                                                                    'District',
                                                                    'license_disclosed'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['neighbourhood'],
                                    transformer=TargetEncoder(cols=['neighbourhood'],
                                                              handle_missing='return_nan'))),
                ('trained_model', HuberRegressor(alpha=0.15, epsilon=1.1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023033C3CDC0>)
2023-06-28 13:08:38,602:INFO:Checking exceptions
2023-06-28 13:08:38,602:INFO:Preloading libraries
2023-06-28 13:08:38,602:INFO:Set up data.
2023-06-28 13:08:38,605:INFO:Set up index.
2023-06-28 13:08:38,776:INFO:Initializing load_model()
2023-06-28 13:08:38,776:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-28 13:08:38,802:INFO:Initializing predict_model()
2023-06-28 13:08:38,802:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002302B36E800>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Russhi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['minimum_nights',
                                             'availability_365',
                                             'accommodates'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'room_type',
                                             'District', 'rental_type',
                                             'license_disclosed'],
                                    transfor...
                 TransformerWrapper(include=['room_type', 'District',
                                             'license_disclosed'],
                                    transformer=OneHotEncoder(cols=['room_type',
                                                                    'District',
                                                                    'license_disclosed'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['neighbourhood'],
                                    transformer=TargetEncoder(cols=['neighbourhood'],
                                                              handle_missing='return_nan'))),
                ('trained_model', HuberRegressor(alpha=0.15, epsilon=1.1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023033C3DFC0>)
2023-06-28 13:08:38,802:INFO:Checking exceptions
2023-06-28 13:08:38,803:INFO:Preloading libraries
2023-06-28 13:08:38,803:INFO:Set up data.
2023-06-28 13:08:38,807:INFO:Set up index.
2023-06-28 13:08:38,979:INFO:Initializing load_model()
2023-06-28 13:08:38,980:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-28 13:08:39,015:INFO:Initializing predict_model()
2023-06-28 13:08:39,015:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002302B39A1A0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Russhi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['minimum_nights',
                                             'availability_365',
                                             'accommodates'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'room_type',
                                             'District', 'rental_type',
                                             'license_disclosed'],
                                    transfor...
                 TransformerWrapper(include=['room_type', 'District',
                                             'license_disclosed'],
                                    transformer=OneHotEncoder(cols=['room_type',
                                                                    'District',
                                                                    'license_disclosed'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['neighbourhood'],
                                    transformer=TargetEncoder(cols=['neighbourhood'],
                                                              handle_missing='return_nan'))),
                ('trained_model', HuberRegressor(alpha=0.15, epsilon=1.1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023033C3E560>)
2023-06-28 13:08:39,015:INFO:Checking exceptions
2023-06-28 13:08:39,015:INFO:Preloading libraries
2023-06-28 13:08:39,016:INFO:Set up data.
2023-06-28 13:08:39,018:INFO:Set up index.
2023-06-28 13:08:39,229:INFO:Initializing load_model()
2023-06-28 13:08:39,230:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-28 13:08:39,257:INFO:Initializing predict_model()
2023-06-28 13:08:39,257:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002302FAF7BB0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Russhi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['minimum_nights',
                                             'availability_365',
                                             'accommodates'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'room_type',
                                             'District', 'rental_type',
                                             'license_disclosed'],
                                    transfor...
                 TransformerWrapper(include=['room_type', 'District',
                                             'license_disclosed'],
                                    transformer=OneHotEncoder(cols=['room_type',
                                                                    'District',
                                                                    'license_disclosed'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['neighbourhood'],
                                    transformer=TargetEncoder(cols=['neighbourhood'],
                                                              handle_missing='return_nan'))),
                ('trained_model', HuberRegressor(alpha=0.15, epsilon=1.1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023033C3F250>)
2023-06-28 13:08:39,257:INFO:Checking exceptions
2023-06-28 13:08:39,257:INFO:Preloading libraries
2023-06-28 13:08:39,258:INFO:Set up data.
2023-06-28 13:08:39,260:INFO:Set up index.
2023-06-28 13:08:39,442:INFO:Initializing load_model()
2023-06-28 13:08:39,443:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-28 13:08:39,468:INFO:Initializing predict_model()
2023-06-28 13:08:39,469:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002302A93B4F0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Russhi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['minimum_nights',
                                             'availability_365',
                                             'accommodates'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'room_type',
                                             'District', 'rental_type',
                                             'license_disclosed'],
                                    transfor...
                 TransformerWrapper(include=['room_type', 'District',
                                             'license_disclosed'],
                                    transformer=OneHotEncoder(cols=['room_type',
                                                                    'District',
                                                                    'license_disclosed'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['neighbourhood'],
                                    transformer=TargetEncoder(cols=['neighbourhood'],
                                                              handle_missing='return_nan'))),
                ('trained_model', HuberRegressor(alpha=0.15, epsilon=1.1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023033C3DD80>)
2023-06-28 13:08:39,469:INFO:Checking exceptions
2023-06-28 13:08:39,469:INFO:Preloading libraries
2023-06-28 13:08:39,470:INFO:Set up data.
2023-06-28 13:08:39,473:INFO:Set up index.
2023-06-28 13:08:39,807:INFO:Initializing load_model()
2023-06-28 13:08:39,807:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-28 13:08:39,836:INFO:Initializing predict_model()
2023-06-28 13:08:39,836:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002302DF5B130>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Russhi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['minimum_nights',
                                             'availability_365',
                                             'accommodates'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'room_type',
                                             'District', 'rental_type',
                                             'license_disclosed'],
                                    transfor...
                 TransformerWrapper(include=['room_type', 'District',
                                             'license_disclosed'],
                                    transformer=OneHotEncoder(cols=['room_type',
                                                                    'District',
                                                                    'license_disclosed'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['neighbourhood'],
                                    transformer=TargetEncoder(cols=['neighbourhood'],
                                                              handle_missing='return_nan'))),
                ('trained_model', HuberRegressor(alpha=0.15, epsilon=1.1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023033C3E170>)
2023-06-28 13:08:39,836:INFO:Checking exceptions
2023-06-28 13:08:39,836:INFO:Preloading libraries
2023-06-28 13:08:39,836:INFO:Set up data.
2023-06-28 13:08:39,839:INFO:Set up index.
2023-06-28 13:08:41,017:INFO:Initializing load_model()
2023-06-28 13:08:41,017:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-28 13:08:41,043:INFO:Initializing predict_model()
2023-06-28 13:08:41,044:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002302F74A410>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Russhi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['minimum_nights',
                                             'availability_365',
                                             'accommodates'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'room_type',
                                             'District', 'rental_type',
                                             'license_disclosed'],
                                    transfor...
                 TransformerWrapper(include=['room_type', 'District',
                                             'license_disclosed'],
                                    transformer=OneHotEncoder(cols=['room_type',
                                                                    'District',
                                                                    'license_disclosed'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['neighbourhood'],
                                    transformer=TargetEncoder(cols=['neighbourhood'],
                                                              handle_missing='return_nan'))),
                ('trained_model', HuberRegressor(alpha=0.15, epsilon=1.1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023033C3CEE0>)
2023-06-28 13:08:41,044:INFO:Checking exceptions
2023-06-28 13:08:41,044:INFO:Preloading libraries
2023-06-28 13:08:41,044:INFO:Set up data.
2023-06-28 13:08:41,048:INFO:Set up index.
2023-06-28 13:11:28,042:INFO:Initializing load_model()
2023-06-28 13:11:28,043:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-28 13:11:28,081:INFO:Initializing predict_model()
2023-06-28 13:11:28,081:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002302DD4FD60>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Russhi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['minimum_nights',
                                             'availability_365',
                                             'accommodates'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'room_type',
                                             'District', 'rental_type',
                                             'license_disclosed'],
                                    transfor...
                 TransformerWrapper(include=['room_type', 'District',
                                             'license_disclosed'],
                                    transformer=OneHotEncoder(cols=['room_type',
                                                                    'District',
                                                                    'license_disclosed'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['neighbourhood'],
                                    transformer=TargetEncoder(cols=['neighbourhood'],
                                                              handle_missing='return_nan'))),
                ('trained_model', HuberRegressor(alpha=0.15, epsilon=1.1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002302CD29240>)
2023-06-28 13:11:28,081:INFO:Checking exceptions
2023-06-28 13:11:28,081:INFO:Preloading libraries
2023-06-28 13:11:28,081:INFO:Set up data.
2023-06-28 13:11:28,084:INFO:Set up index.
2023-06-28 13:11:32,957:INFO:Initializing load_model()
2023-06-28 13:11:32,957:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-28 13:11:32,992:INFO:Initializing predict_model()
2023-06-28 13:11:32,992:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002302DD4E560>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Russhi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['minimum_nights',
                                             'availability_365',
                                             'accommodates'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'room_type',
                                             'District', 'rental_type',
                                             'license_disclosed'],
                                    transfor...
                 TransformerWrapper(include=['room_type', 'District',
                                             'license_disclosed'],
                                    transformer=OneHotEncoder(cols=['room_type',
                                                                    'District',
                                                                    'license_disclosed'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['neighbourhood'],
                                    transformer=TargetEncoder(cols=['neighbourhood'],
                                                              handle_missing='return_nan'))),
                ('trained_model', HuberRegressor(alpha=0.15, epsilon=1.1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023033C3E950>)
2023-06-28 13:11:32,992:INFO:Checking exceptions
2023-06-28 13:11:32,992:INFO:Preloading libraries
2023-06-28 13:11:32,993:INFO:Set up data.
2023-06-28 13:11:32,996:INFO:Set up index.
2023-06-28 13:11:37,906:INFO:Initializing load_model()
2023-06-28 13:11:37,906:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-28 13:11:37,939:INFO:Initializing predict_model()
2023-06-28 13:11:37,939:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002302DD4FCD0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Russhi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['minimum_nights',
                                             'availability_365',
                                             'accommodates'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'room_type',
                                             'District', 'rental_type',
                                             'license_disclosed'],
                                    transfor...
                 TransformerWrapper(include=['room_type', 'District',
                                             'license_disclosed'],
                                    transformer=OneHotEncoder(cols=['room_type',
                                                                    'District',
                                                                    'license_disclosed'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['neighbourhood'],
                                    transformer=TargetEncoder(cols=['neighbourhood'],
                                                              handle_missing='return_nan'))),
                ('trained_model', HuberRegressor(alpha=0.15, epsilon=1.1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023033C3E7A0>)
2023-06-28 13:11:37,939:INFO:Checking exceptions
2023-06-28 13:11:37,939:INFO:Preloading libraries
2023-06-28 13:11:37,939:INFO:Set up data.
2023-06-28 13:11:37,943:INFO:Set up index.
2023-06-28 13:11:38,790:INFO:Initializing load_model()
2023-06-28 13:11:38,790:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-28 13:11:38,820:INFO:Initializing predict_model()
2023-06-28 13:11:38,820:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002302DF9F190>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Russhi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['minimum_nights',
                                             'availability_365',
                                             'accommodates'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'room_type',
                                             'District', 'rental_type',
                                             'license_disclosed'],
                                    transfor...
                 TransformerWrapper(include=['room_type', 'District',
                                             'license_disclosed'],
                                    transformer=OneHotEncoder(cols=['room_type',
                                                                    'District',
                                                                    'license_disclosed'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['neighbourhood'],
                                    transformer=TargetEncoder(cols=['neighbourhood'],
                                                              handle_missing='return_nan'))),
                ('trained_model', HuberRegressor(alpha=0.15, epsilon=1.1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023033C3E950>)
2023-06-28 13:11:38,820:INFO:Checking exceptions
2023-06-28 13:11:38,820:INFO:Preloading libraries
2023-06-28 13:11:38,820:INFO:Set up data.
2023-06-28 13:11:38,823:INFO:Set up index.
2023-06-28 13:14:33,076:INFO:Initializing load_model()
2023-06-28 13:14:33,077:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-28 13:14:33,116:INFO:Initializing predict_model()
2023-06-28 13:14:33,116:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002302CC74E80>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Russhi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['minimum_nights',
                                             'availability_365',
                                             'accommodates'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'room_type',
                                             'District', 'rental_type',
                                             'license_disclosed'],
                                    transfor...
                 TransformerWrapper(include=['room_type', 'District',
                                             'license_disclosed'],
                                    transformer=OneHotEncoder(cols=['room_type',
                                                                    'District',
                                                                    'license_disclosed'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['neighbourhood'],
                                    transformer=TargetEncoder(cols=['neighbourhood'],
                                                              handle_missing='return_nan'))),
                ('trained_model', HuberRegressor(alpha=0.15, epsilon=1.1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002302CD28F70>)
2023-06-28 13:14:33,116:INFO:Checking exceptions
2023-06-28 13:14:33,116:INFO:Preloading libraries
2023-06-28 13:14:33,117:INFO:Set up data.
2023-06-28 13:14:33,120:INFO:Set up index.
2023-06-28 13:14:51,888:INFO:Initializing load_model()
2023-06-28 13:14:51,888:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-28 13:14:51,917:INFO:Initializing predict_model()
2023-06-28 13:14:51,917:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023033393280>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Russhi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['minimum_nights',
                                             'availability_365',
                                             'accommodates'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'room_type',
                                             'District', 'rental_type',
                                             'license_disclosed'],
                                    transfor...
                 TransformerWrapper(include=['room_type', 'District',
                                             'license_disclosed'],
                                    transformer=OneHotEncoder(cols=['room_type',
                                                                    'District',
                                                                    'license_disclosed'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['neighbourhood'],
                                    transformer=TargetEncoder(cols=['neighbourhood'],
                                                              handle_missing='return_nan'))),
                ('trained_model', HuberRegressor(alpha=0.15, epsilon=1.1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023033C3EB90>)
2023-06-28 13:14:51,917:INFO:Checking exceptions
2023-06-28 13:14:51,918:INFO:Preloading libraries
2023-06-28 13:14:51,918:INFO:Set up data.
2023-06-28 13:14:51,920:INFO:Set up index.
2023-06-28 13:15:28,284:INFO:Initializing load_model()
2023-06-28 13:15:28,284:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-28 13:15:28,327:INFO:Initializing predict_model()
2023-06-28 13:15:28,327:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023033392DD0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Russhi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['minimum_nights',
                                             'availability_365',
                                             'accommodates'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'room_type',
                                             'District', 'rental_type',
                                             'license_disclosed'],
                                    transfor...
                 TransformerWrapper(include=['room_type', 'District',
                                             'license_disclosed'],
                                    transformer=OneHotEncoder(cols=['room_type',
                                                                    'District',
                                                                    'license_disclosed'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['neighbourhood'],
                                    transformer=TargetEncoder(cols=['neighbourhood'],
                                                              handle_missing='return_nan'))),
                ('trained_model', HuberRegressor(alpha=0.15, epsilon=1.1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002302CD293F0>)
2023-06-28 13:15:28,327:INFO:Checking exceptions
2023-06-28 13:15:28,327:INFO:Preloading libraries
2023-06-28 13:15:28,328:INFO:Set up data.
2023-06-28 13:15:28,331:INFO:Set up index.
2023-06-28 14:15:15,373:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-28 14:15:15,373:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-28 14:15:15,373:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-28 14:15:15,373:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-28 14:15:16,448:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-06-28 14:15:16,607:INFO:Initializing load_model()
2023-06-28 14:15:16,607:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-28 14:15:16,653:INFO:Initializing predict_model()
2023-06-28 14:15:16,653:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020DBA694B20>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Russhi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['minimum_nights',
                                             'availability_365',
                                             'accommodates'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'room_type',
                                             'District', 'rental_type',
                                             'license_disclosed'],
                                    transfor...
                 TransformerWrapper(include=['room_type', 'District',
                                             'license_disclosed'],
                                    transformer=OneHotEncoder(cols=['room_type',
                                                                    'District',
                                                                    'license_disclosed'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['neighbourhood'],
                                    transformer=TargetEncoder(cols=['neighbourhood'],
                                                              handle_missing='return_nan'))),
                ('trained_model', HuberRegressor(alpha=0.15, epsilon=1.1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020DBA674820>)
2023-06-28 14:15:16,653:INFO:Checking exceptions
2023-06-28 14:15:16,653:INFO:Preloading libraries
2023-06-28 14:15:16,654:INFO:Set up data.
2023-06-28 14:15:16,657:INFO:Set up index.
2023-06-28 14:15:35,383:INFO:Initializing load_model()
2023-06-28 14:15:35,383:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-28 14:15:35,413:INFO:Initializing predict_model()
2023-06-28 14:15:35,414:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020D91A807F0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Russhi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['minimum_nights',
                                             'availability_365',
                                             'accommodates'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'room_type',
                                             'District', 'rental_type',
                                             'license_disclosed'],
                                    transfor...
                 TransformerWrapper(include=['room_type', 'District',
                                             'license_disclosed'],
                                    transformer=OneHotEncoder(cols=['room_type',
                                                                    'District',
                                                                    'license_disclosed'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['neighbourhood'],
                                    transformer=TargetEncoder(cols=['neighbourhood'],
                                                              handle_missing='return_nan'))),
                ('trained_model', HuberRegressor(alpha=0.15, epsilon=1.1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020DBB16A320>)
2023-06-28 14:15:35,414:INFO:Checking exceptions
2023-06-28 14:15:35,414:INFO:Preloading libraries
2023-06-28 14:15:35,414:INFO:Set up data.
2023-06-28 14:15:35,417:INFO:Set up index.
2023-06-28 14:16:42,891:INFO:Initializing load_model()
2023-06-28 14:16:42,892:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-28 14:16:42,921:INFO:Initializing predict_model()
2023-06-28 14:16:42,921:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020DBCE42980>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Russhi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['minimum_nights',
                                             'availability_365',
                                             'accommodates'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'room_type',
                                             'District', 'rental_type',
                                             'license_disclosed'],
                                    transfor...
                 TransformerWrapper(include=['room_type', 'District',
                                             'license_disclosed'],
                                    transformer=OneHotEncoder(cols=['room_type',
                                                                    'District',
                                                                    'license_disclosed'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['neighbourhood'],
                                    transformer=TargetEncoder(cols=['neighbourhood'],
                                                              handle_missing='return_nan'))),
                ('trained_model', HuberRegressor(alpha=0.15, epsilon=1.1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020DCB3AF490>)
2023-06-28 14:16:42,921:INFO:Checking exceptions
2023-06-28 14:16:42,921:INFO:Preloading libraries
2023-06-28 14:16:42,922:INFO:Set up data.
2023-06-28 14:16:42,924:INFO:Set up index.
2023-06-28 14:16:58,167:INFO:Initializing load_model()
2023-06-28 14:16:58,167:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-28 14:16:58,197:INFO:Initializing predict_model()
2023-06-28 14:16:58,197:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020DBCE435E0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Russhi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['minimum_nights',
                                             'availability_365',
                                             'accommodates'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'room_type',
                                             'District', 'rental_type',
                                             'license_disclosed'],
                                    transfor...
                 TransformerWrapper(include=['room_type', 'District',
                                             'license_disclosed'],
                                    transformer=OneHotEncoder(cols=['room_type',
                                                                    'District',
                                                                    'license_disclosed'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['neighbourhood'],
                                    transformer=TargetEncoder(cols=['neighbourhood'],
                                                              handle_missing='return_nan'))),
                ('trained_model', HuberRegressor(alpha=0.15, epsilon=1.1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020DCB32D360>)
2023-06-28 14:16:58,197:INFO:Checking exceptions
2023-06-28 14:16:58,197:INFO:Preloading libraries
2023-06-28 14:16:58,197:INFO:Set up data.
2023-06-28 14:16:58,201:INFO:Set up index.
2023-06-28 15:45:15,831:INFO:Initializing load_model()
2023-06-28 15:45:15,831:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-28 15:45:15,864:INFO:Initializing predict_model()
2023-06-28 15:45:15,865:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020DC2CE8A30>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Russhi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['minimum_nights',
                                             'availability_365',
                                             'accommodates'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'room_type',
                                             'District', 'rental_type',
                                             'license_disclosed'],
                                    transfor...
                 TransformerWrapper(include=['room_type', 'District',
                                             'license_disclosed'],
                                    transformer=OneHotEncoder(cols=['room_type',
                                                                    'District',
                                                                    'license_disclosed'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['neighbourhood'],
                                    transformer=TargetEncoder(cols=['neighbourhood'],
                                                              handle_missing='return_nan'))),
                ('trained_model', HuberRegressor(alpha=0.15, epsilon=1.1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020DC441FE20>)
2023-06-28 15:45:15,865:INFO:Checking exceptions
2023-06-28 15:45:15,865:INFO:Preloading libraries
2023-06-28 15:45:15,865:INFO:Set up data.
2023-06-28 15:45:15,868:INFO:Set up index.
2023-06-28 16:00:34,623:INFO:Initializing load_model()
2023-06-28 16:00:34,623:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-28 16:00:34,653:INFO:Initializing predict_model()
2023-06-28 16:00:34,654:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020DBC3CFA60>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Russhi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['minimum_nights',
                                             'availability_365',
                                             'accommodates'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'room_type',
                                             'District', 'rental_type',
                                             'license_disclosed'],
                                    transfor...
                 TransformerWrapper(include=['room_type', 'District',
                                             'license_disclosed'],
                                    transformer=OneHotEncoder(cols=['room_type',
                                                                    'District',
                                                                    'license_disclosed'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['neighbourhood'],
                                    transformer=TargetEncoder(cols=['neighbourhood'],
                                                              handle_missing='return_nan'))),
                ('trained_model', HuberRegressor(alpha=0.15, epsilon=1.1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020DBB755CF0>)
2023-06-28 16:00:34,654:INFO:Checking exceptions
2023-06-28 16:00:34,654:INFO:Preloading libraries
2023-06-28 16:00:34,654:INFO:Set up data.
2023-06-28 16:00:34,658:INFO:Set up index.
2023-06-28 16:01:01,856:INFO:Initializing load_model()
2023-06-28 16:01:01,856:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-28 16:01:01,889:INFO:Initializing predict_model()
2023-06-28 16:01:01,889:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020DBC47BD90>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Russhi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['minimum_nights',
                                             'availability_365',
                                             'accommodates'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'room_type',
                                             'District', 'rental_type',
                                             'license_disclosed'],
                                    transfor...
                 TransformerWrapper(include=['room_type', 'District',
                                             'license_disclosed'],
                                    transformer=OneHotEncoder(cols=['room_type',
                                                                    'District',
                                                                    'license_disclosed'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['neighbourhood'],
                                    transformer=TargetEncoder(cols=['neighbourhood'],
                                                              handle_missing='return_nan'))),
                ('trained_model', HuberRegressor(alpha=0.15, epsilon=1.1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020DBB7570A0>)
2023-06-28 16:01:01,889:INFO:Checking exceptions
2023-06-28 16:01:01,889:INFO:Preloading libraries
2023-06-28 16:01:01,890:INFO:Set up data.
2023-06-28 16:01:01,892:INFO:Set up index.
2023-06-28 16:49:27,038:INFO:Initializing load_model()
2023-06-28 16:49:27,038:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-28 16:49:27,072:INFO:Initializing predict_model()
2023-06-28 16:49:27,072:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020DC2C78820>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Russhi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['minimum_nights',
                                             'availability_365',
                                             'accommodates'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'room_type',
                                             'District', 'rental_type',
                                             'license_disclosed'],
                                    transfor...
                 TransformerWrapper(include=['room_type', 'District',
                                             'license_disclosed'],
                                    transformer=OneHotEncoder(cols=['room_type',
                                                                    'District',
                                                                    'license_disclosed'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['neighbourhood'],
                                    transformer=TargetEncoder(cols=['neighbourhood'],
                                                              handle_missing='return_nan'))),
                ('trained_model', HuberRegressor(alpha=0.15, epsilon=1.1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020DD5EACA60>)
2023-06-28 16:49:27,072:INFO:Checking exceptions
2023-06-28 16:49:27,072:INFO:Preloading libraries
2023-06-28 16:49:27,072:INFO:Set up data.
2023-06-28 16:49:27,076:INFO:Set up index.
2023-06-28 16:50:00,585:INFO:Initializing load_model()
2023-06-28 16:50:00,585:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-28 16:50:00,615:INFO:Initializing predict_model()
2023-06-28 16:50:00,615:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020DBA694190>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Russhi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['minimum_nights',
                                             'availability_365',
                                             'accommodates'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'room_type',
                                             'District', 'rental_type',
                                             'license_disclosed'],
                                    transfor...
                 TransformerWrapper(include=['room_type', 'District',
                                             'license_disclosed'],
                                    transformer=OneHotEncoder(cols=['room_type',
                                                                    'District',
                                                                    'license_disclosed'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['neighbourhood'],
                                    transformer=TargetEncoder(cols=['neighbourhood'],
                                                              handle_missing='return_nan'))),
                ('trained_model', HuberRegressor(alpha=0.15, epsilon=1.1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020DC3EEE680>)
2023-06-28 16:50:00,615:INFO:Checking exceptions
2023-06-28 16:50:00,615:INFO:Preloading libraries
2023-06-28 16:50:00,615:INFO:Set up data.
2023-06-28 16:50:00,619:INFO:Set up index.
2023-06-29 07:49:01,997:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-29 07:49:01,997:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-29 07:49:01,997:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-29 07:49:01,997:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-29 07:49:03,396:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-06-29 07:49:03,605:INFO:Initializing load_model()
2023-06-29 07:49:03,605:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-29 07:49:03,673:INFO:Initializing predict_model()
2023-06-29 07:49:03,673:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FB9BCFDE70>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Russhi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['minimum_nights',
                                             'availability_365',
                                             'accommodates'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'room_type',
                                             'District', 'rental_type',
                                             'license_disclosed'],
                                    transfor...
                 TransformerWrapper(include=['room_type', 'District',
                                             'license_disclosed'],
                                    transformer=OneHotEncoder(cols=['room_type',
                                                                    'District',
                                                                    'license_disclosed'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['neighbourhood'],
                                    transformer=TargetEncoder(cols=['neighbourhood'],
                                                              handle_missing='return_nan'))),
                ('trained_model', HuberRegressor(alpha=0.15, epsilon=1.1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FB9BCFBAC0>)
2023-06-29 07:49:03,673:INFO:Checking exceptions
2023-06-29 07:49:03,673:INFO:Preloading libraries
2023-06-29 07:49:03,674:INFO:Set up data.
2023-06-29 07:49:03,676:INFO:Set up index.
2023-06-29 07:49:38,730:INFO:Initializing load_model()
2023-06-29 07:49:38,730:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-29 07:49:38,769:INFO:Initializing predict_model()
2023-06-29 07:49:38,769:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FB974E25C0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Russhi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['minimum_nights',
                                             'availability_365',
                                             'accommodates'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'room_type',
                                             'District', 'rental_type',
                                             'license_disclosed'],
                                    transfor...
                 TransformerWrapper(include=['room_type', 'District',
                                             'license_disclosed'],
                                    transformer=OneHotEncoder(cols=['room_type',
                                                                    'District',
                                                                    'license_disclosed'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['neighbourhood'],
                                    transformer=TargetEncoder(cols=['neighbourhood'],
                                                              handle_missing='return_nan'))),
                ('trained_model', HuberRegressor(alpha=0.15, epsilon=1.1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FB9B376DD0>)
2023-06-29 07:49:38,769:INFO:Checking exceptions
2023-06-29 07:49:38,769:INFO:Preloading libraries
2023-06-29 07:49:38,769:INFO:Set up data.
2023-06-29 07:49:38,773:INFO:Set up index.
2023-06-29 09:46:15,271:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-29 09:46:15,271:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-29 09:46:15,271:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-29 09:46:15,271:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-29 09:46:15,636:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-06-29 09:46:15,709:INFO:Initializing load_model()
2023-06-29 09:46:15,710:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-29 09:46:15,744:INFO:Initializing predict_model()
2023-06-29 09:46:15,745:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000239D4A65BD0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Russhi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['minimum_nights',
                                             'availability_365',
                                             'accommodates'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'room_type',
                                             'District', 'rental_type',
                                             'license_disclosed'],
                                    transfor...
                 TransformerWrapper(include=['room_type', 'District',
                                             'license_disclosed'],
                                    transformer=OneHotEncoder(cols=['room_type',
                                                                    'District',
                                                                    'license_disclosed'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['neighbourhood'],
                                    transformer=TargetEncoder(cols=['neighbourhood'],
                                                              handle_missing='return_nan'))),
                ('trained_model', HuberRegressor(alpha=0.15, epsilon=1.1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000239D4A69870>)
2023-06-29 09:46:15,745:INFO:Checking exceptions
2023-06-29 09:46:15,745:INFO:Preloading libraries
2023-06-29 09:46:15,745:INFO:Set up data.
2023-06-29 09:46:15,749:INFO:Set up index.
2023-06-29 09:46:23,359:INFO:Initializing load_model()
2023-06-29 09:46:23,360:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-29 09:46:23,393:INFO:Initializing predict_model()
2023-06-29 09:46:23,393:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000239CF6E3FD0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Russhi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['minimum_nights',
                                             'availability_365',
                                             'accommodates'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'room_type',
                                             'District', 'rental_type',
                                             'license_disclosed'],
                                    transfor...
                 TransformerWrapper(include=['room_type', 'District',
                                             'license_disclosed'],
                                    transformer=OneHotEncoder(cols=['room_type',
                                                                    'District',
                                                                    'license_disclosed'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['neighbourhood'],
                                    transformer=TargetEncoder(cols=['neighbourhood'],
                                                              handle_missing='return_nan'))),
                ('trained_model', HuberRegressor(alpha=0.15, epsilon=1.1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000239CF734550>)
2023-06-29 09:46:23,393:INFO:Checking exceptions
2023-06-29 09:46:23,393:INFO:Preloading libraries
2023-06-29 09:46:23,393:INFO:Set up data.
2023-06-29 09:46:23,396:INFO:Set up index.
2023-06-29 09:47:47,678:INFO:Initializing load_model()
2023-06-29 09:47:47,678:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-29 09:47:47,713:INFO:Initializing predict_model()
2023-06-29 09:47:47,713:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000239D4A9FC10>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Russhi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['minimum_nights',
                                             'availability_365',
                                             'accommodates'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'room_type',
                                             'District', 'rental_type',
                                             'license_disclosed'],
                                    transfor...
                 TransformerWrapper(include=['room_type', 'District',
                                             'license_disclosed'],
                                    transformer=OneHotEncoder(cols=['room_type',
                                                                    'District',
                                                                    'license_disclosed'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['neighbourhood'],
                                    transformer=TargetEncoder(cols=['neighbourhood'],
                                                              handle_missing='return_nan'))),
                ('trained_model', HuberRegressor(alpha=0.15, epsilon=1.1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000239D52ED240>)
2023-06-29 09:47:47,713:INFO:Checking exceptions
2023-06-29 09:47:47,713:INFO:Preloading libraries
2023-06-29 09:47:47,713:INFO:Set up data.
2023-06-29 09:47:47,716:INFO:Set up index.
2023-06-29 10:37:45,021:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-29 10:37:45,021:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-29 10:37:45,021:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-29 10:37:45,021:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-29 10:37:45,348:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-06-29 10:37:45,416:INFO:Initializing load_model()
2023-06-29 10:37:45,416:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-29 10:37:45,451:INFO:Initializing predict_model()
2023-06-29 10:37:45,451:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002479598B7C0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Russhi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['minimum_nights',
                                             'availability_365',
                                             'accommodates'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'room_type',
                                             'District', 'rental_type',
                                             'license_disclosed'],
                                    transfor...
                 TransformerWrapper(include=['room_type', 'District',
                                             'license_disclosed'],
                                    transformer=OneHotEncoder(cols=['room_type',
                                                                    'District',
                                                                    'license_disclosed'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['neighbourhood'],
                                    transformer=TargetEncoder(cols=['neighbourhood'],
                                                              handle_missing='return_nan'))),
                ('trained_model', HuberRegressor(alpha=0.15, epsilon=1.1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002479599BBE0>)
2023-06-29 10:37:45,452:INFO:Checking exceptions
2023-06-29 10:37:45,452:INFO:Preloading libraries
2023-06-29 10:37:45,452:INFO:Set up data.
2023-06-29 10:37:45,455:INFO:Set up index.
2023-06-29 10:37:47,505:INFO:Initializing load_model()
2023-06-29 10:37:47,506:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-29 10:37:47,538:INFO:Initializing predict_model()
2023-06-29 10:37:47,538:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024794FD9E10>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Russhi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['minimum_nights',
                                             'availability_365',
                                             'accommodates'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'room_type',
                                             'District', 'rental_type',
                                             'license_disclosed'],
                                    transfor...
                 TransformerWrapper(include=['room_type', 'District',
                                             'license_disclosed'],
                                    transformer=OneHotEncoder(cols=['room_type',
                                                                    'District',
                                                                    'license_disclosed'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['neighbourhood'],
                                    transformer=TargetEncoder(cols=['neighbourhood'],
                                                              handle_missing='return_nan'))),
                ('trained_model', HuberRegressor(alpha=0.15, epsilon=1.1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024794606DD0>)
2023-06-29 10:37:47,538:INFO:Checking exceptions
2023-06-29 10:37:47,538:INFO:Preloading libraries
2023-06-29 10:37:47,538:INFO:Set up data.
2023-06-29 10:37:47,541:INFO:Set up index.
2023-06-29 10:50:32,091:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-29 10:50:32,091:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-29 10:50:32,091:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-29 10:50:32,091:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-29 10:50:32,411:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-06-29 10:50:32,476:INFO:Initializing load_model()
2023-06-29 10:50:32,477:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-29 10:50:32,507:INFO:Initializing predict_model()
2023-06-29 10:50:32,507:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000198BCFEC8B0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Russhi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['minimum_nights',
                                             'availability_365',
                                             'accommodates'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'room_type',
                                             'District', 'rental_type',
                                             'license_disclosed'],
                                    transfor...
                 TransformerWrapper(include=['room_type', 'District',
                                             'license_disclosed'],
                                    transformer=OneHotEncoder(cols=['room_type',
                                                                    'District',
                                                                    'license_disclosed'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['neighbourhood'],
                                    transformer=TargetEncoder(cols=['neighbourhood'],
                                                              handle_missing='return_nan'))),
                ('trained_model', HuberRegressor(alpha=0.15, epsilon=1.1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000198BCFD8AF0>)
2023-06-29 10:50:32,508:INFO:Checking exceptions
2023-06-29 10:50:32,508:INFO:Preloading libraries
2023-06-29 10:50:32,508:INFO:Set up data.
2023-06-29 10:50:32,511:INFO:Set up index.
2023-06-29 11:07:33,026:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-29 11:07:33,026:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-29 11:07:33,026:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-29 11:07:33,026:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-29 11:07:39,777:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-06-29 11:07:39,990:INFO:Initializing load_model()
2023-06-29 11:07:39,990:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-29 11:07:40,032:INFO:Initializing predict_model()
2023-06-29 11:07:40,033:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000026B44B52E00>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Russhi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['minimum_nights',
                                             'availability_365',
                                             'accommodates'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'room_type',
                                             'District', 'rental_type',
                                             'license_disclosed'],
                                    transfor...
                 TransformerWrapper(include=['room_type', 'District',
                                             'license_disclosed'],
                                    transformer=OneHotEncoder(cols=['room_type',
                                                                    'District',
                                                                    'license_disclosed'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['neighbourhood'],
                                    transformer=TargetEncoder(cols=['neighbourhood'],
                                                              handle_missing='return_nan'))),
                ('trained_model', HuberRegressor(alpha=0.15, epsilon=1.1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000026B45D8A5F0>)
2023-06-29 11:07:40,033:INFO:Checking exceptions
2023-06-29 11:07:40,033:INFO:Preloading libraries
2023-06-29 11:07:40,033:INFO:Set up data.
2023-06-29 11:07:40,036:INFO:Set up index.
2023-06-29 11:07:43,036:INFO:Initializing load_model()
2023-06-29 11:07:43,036:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-29 11:07:43,064:INFO:Initializing predict_model()
2023-06-29 11:07:43,064:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000026B2BD848E0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Russhi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['minimum_nights',
                                             'availability_365',
                                             'accommodates'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'room_type',
                                             'District', 'rental_type',
                                             'license_disclosed'],
                                    transfor...
                 TransformerWrapper(include=['room_type', 'District',
                                             'license_disclosed'],
                                    transformer=OneHotEncoder(cols=['room_type',
                                                                    'District',
                                                                    'license_disclosed'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['neighbourhood'],
                                    transformer=TargetEncoder(cols=['neighbourhood'],
                                                              handle_missing='return_nan'))),
                ('trained_model', HuberRegressor(alpha=0.15, epsilon=1.1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000026B2BB948B0>)
2023-06-29 11:07:43,064:INFO:Checking exceptions
2023-06-29 11:07:43,064:INFO:Preloading libraries
2023-06-29 11:07:43,064:INFO:Set up data.
2023-06-29 11:07:43,067:INFO:Set up index.
2023-06-29 11:41:13,039:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-29 11:41:13,039:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-29 11:41:13,039:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-29 11:41:13,039:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-29 11:41:13,343:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-06-29 11:41:13,409:INFO:Initializing load_model()
2023-06-29 11:41:13,410:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-29 11:41:13,454:INFO:Initializing predict_model()
2023-06-29 11:41:13,455:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000026467648B80>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Russhi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['minimum_nights',
                                             'availability_365',
                                             'accommodates'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'room_type',
                                             'District', 'rental_type',
                                             'license_disclosed'],
                                    transfor...
                 TransformerWrapper(include=['room_type', 'District',
                                             'license_disclosed'],
                                    transformer=OneHotEncoder(cols=['room_type',
                                                                    'District',
                                                                    'license_disclosed'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['neighbourhood'],
                                    transformer=TargetEncoder(cols=['neighbourhood'],
                                                              handle_missing='return_nan'))),
                ('trained_model', HuberRegressor(alpha=0.15, epsilon=1.1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000026467634C10>)
2023-06-29 11:41:13,455:INFO:Checking exceptions
2023-06-29 11:41:13,455:INFO:Preloading libraries
2023-06-29 11:41:13,455:INFO:Set up data.
2023-06-29 11:41:13,459:INFO:Set up index.
2023-06-29 17:48:35,891:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-29 17:48:35,892:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-29 17:48:35,892:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-29 17:48:35,892:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-29 17:48:37,112:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-06-29 17:48:37,283:INFO:Initializing load_model()
2023-06-29 17:48:37,283:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-29 17:48:37,324:INFO:Initializing predict_model()
2023-06-29 17:48:37,324:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B7DBD337F0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Russhi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['minimum_nights',
                                             'availability_365',
                                             'accommodates'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'room_type',
                                             'District', 'rental_type',
                                             'license_disclosed'],
                                    transfor...
                 TransformerWrapper(include=['room_type', 'District',
                                             'license_disclosed'],
                                    transformer=OneHotEncoder(cols=['room_type',
                                                                    'District',
                                                                    'license_disclosed'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['neighbourhood'],
                                    transformer=TargetEncoder(cols=['neighbourhood'],
                                                              handle_missing='return_nan'))),
                ('trained_model', HuberRegressor(alpha=0.15, epsilon=1.1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B7DBD49B40>)
2023-06-29 17:48:37,324:INFO:Checking exceptions
2023-06-29 17:48:37,324:INFO:Preloading libraries
2023-06-29 17:48:37,325:INFO:Set up data.
2023-06-29 17:48:37,329:INFO:Set up index.
2023-06-29 17:48:44,712:INFO:Initializing load_model()
2023-06-29 17:48:44,712:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-29 17:48:44,744:INFO:Initializing predict_model()
2023-06-29 17:48:44,744:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B7DBD33CD0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Russhi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['minimum_nights',
                                             'availability_365',
                                             'accommodates'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'room_type',
                                             'District', 'rental_type',
                                             'license_disclosed'],
                                    transfor...
                 TransformerWrapper(include=['room_type', 'District',
                                             'license_disclosed'],
                                    transformer=OneHotEncoder(cols=['room_type',
                                                                    'District',
                                                                    'license_disclosed'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['neighbourhood'],
                                    transformer=TargetEncoder(cols=['neighbourhood'],
                                                              handle_missing='return_nan'))),
                ('trained_model', HuberRegressor(alpha=0.15, epsilon=1.1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B7DBE39630>)
2023-06-29 17:48:44,744:INFO:Checking exceptions
2023-06-29 17:48:44,744:INFO:Preloading libraries
2023-06-29 17:48:44,744:INFO:Set up data.
2023-06-29 17:48:44,747:INFO:Set up index.
2023-06-29 17:48:52,288:INFO:Initializing load_model()
2023-06-29 17:48:52,288:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-29 17:48:52,316:INFO:Initializing predict_model()
2023-06-29 17:48:52,316:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B7DBD33A60>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Russhi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['minimum_nights',
                                             'availability_365',
                                             'accommodates'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'room_type',
                                             'District', 'rental_type',
                                             'license_disclosed'],
                                    transfor...
                 TransformerWrapper(include=['room_type', 'District',
                                             'license_disclosed'],
                                    transformer=OneHotEncoder(cols=['room_type',
                                                                    'District',
                                                                    'license_disclosed'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['neighbourhood'],
                                    transformer=TargetEncoder(cols=['neighbourhood'],
                                                              handle_missing='return_nan'))),
                ('trained_model', HuberRegressor(alpha=0.15, epsilon=1.1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B7D88BF9A0>)
2023-06-29 17:48:52,316:INFO:Checking exceptions
2023-06-29 17:48:52,316:INFO:Preloading libraries
2023-06-29 17:48:52,316:INFO:Set up data.
2023-06-29 17:48:52,320:INFO:Set up index.
2023-06-29 17:48:58,890:INFO:Initializing load_model()
2023-06-29 17:48:58,891:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-29 17:48:58,922:INFO:Initializing predict_model()
2023-06-29 17:48:58,922:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B7D865B910>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Russhi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['minimum_nights',
                                             'availability_365',
                                             'accommodates'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'room_type',
                                             'District', 'rental_type',
                                             'license_disclosed'],
                                    transfor...
                 TransformerWrapper(include=['room_type', 'District',
                                             'license_disclosed'],
                                    transformer=OneHotEncoder(cols=['room_type',
                                                                    'District',
                                                                    'license_disclosed'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['neighbourhood'],
                                    transformer=TargetEncoder(cols=['neighbourhood'],
                                                              handle_missing='return_nan'))),
                ('trained_model', HuberRegressor(alpha=0.15, epsilon=1.1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B7B25A28C0>)
2023-06-29 17:48:58,922:INFO:Checking exceptions
2023-06-29 17:48:58,922:INFO:Preloading libraries
2023-06-29 17:48:58,922:INFO:Set up data.
2023-06-29 17:48:58,925:INFO:Set up index.
2023-06-29 17:49:01,192:INFO:Initializing load_model()
2023-06-29 17:49:01,192:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-29 17:49:01,218:INFO:Initializing predict_model()
2023-06-29 17:49:01,218:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B7DBD6E260>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Russhi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['minimum_nights',
                                             'availability_365',
                                             'accommodates'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'room_type',
                                             'District', 'rental_type',
                                             'license_disclosed'],
                                    transfor...
                 TransformerWrapper(include=['room_type', 'District',
                                             'license_disclosed'],
                                    transformer=OneHotEncoder(cols=['room_type',
                                                                    'District',
                                                                    'license_disclosed'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['neighbourhood'],
                                    transformer=TargetEncoder(cols=['neighbourhood'],
                                                              handle_missing='return_nan'))),
                ('trained_model', HuberRegressor(alpha=0.15, epsilon=1.1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B7B25A27A0>)
2023-06-29 17:49:01,218:INFO:Checking exceptions
2023-06-29 17:49:01,218:INFO:Preloading libraries
2023-06-29 17:49:01,219:INFO:Set up data.
2023-06-29 17:49:01,222:INFO:Set up index.
2023-06-29 17:49:04,206:INFO:Initializing load_model()
2023-06-29 17:49:04,206:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-29 17:49:04,237:INFO:Initializing predict_model()
2023-06-29 17:49:04,237:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B7B25BDAB0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Russhi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['minimum_nights',
                                             'availability_365',
                                             'accommodates'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'room_type',
                                             'District', 'rental_type',
                                             'license_disclosed'],
                                    transfor...
                 TransformerWrapper(include=['room_type', 'District',
                                             'license_disclosed'],
                                    transformer=OneHotEncoder(cols=['room_type',
                                                                    'District',
                                                                    'license_disclosed'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['neighbourhood'],
                                    transformer=TargetEncoder(cols=['neighbourhood'],
                                                              handle_missing='return_nan'))),
                ('trained_model', HuberRegressor(alpha=0.15, epsilon=1.1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B7D5E24550>)
2023-06-29 17:49:04,237:INFO:Checking exceptions
2023-06-29 17:49:04,237:INFO:Preloading libraries
2023-06-29 17:49:04,238:INFO:Set up data.
2023-06-29 17:49:04,240:INFO:Set up index.
2023-06-29 17:49:14,308:INFO:Initializing load_model()
2023-06-29 17:49:14,308:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-29 17:49:14,336:INFO:Initializing predict_model()
2023-06-29 17:49:14,336:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B7DC25F9D0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Russhi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['minimum_nights',
                                             'availability_365',
                                             'accommodates'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'room_type',
                                             'District', 'rental_type',
                                             'license_disclosed'],
                                    transfor...
                 TransformerWrapper(include=['room_type', 'District',
                                             'license_disclosed'],
                                    transformer=OneHotEncoder(cols=['room_type',
                                                                    'District',
                                                                    'license_disclosed'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['neighbourhood'],
                                    transformer=TargetEncoder(cols=['neighbourhood'],
                                                              handle_missing='return_nan'))),
                ('trained_model', HuberRegressor(alpha=0.15, epsilon=1.1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B7D88BF9A0>)
2023-06-29 17:49:14,336:INFO:Checking exceptions
2023-06-29 17:49:14,336:INFO:Preloading libraries
2023-06-29 17:49:14,336:INFO:Set up data.
2023-06-29 17:49:14,339:INFO:Set up index.
2023-06-29 17:49:15,581:INFO:Initializing load_model()
2023-06-29 17:49:15,581:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-29 17:49:15,610:INFO:Initializing predict_model()
2023-06-29 17:49:15,610:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B7D865BF40>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Russhi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['minimum_nights',
                                             'availability_365',
                                             'accommodates'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'room_type',
                                             'District', 'rental_type',
                                             'license_disclosed'],
                                    transfor...
                 TransformerWrapper(include=['room_type', 'District',
                                             'license_disclosed'],
                                    transformer=OneHotEncoder(cols=['room_type',
                                                                    'District',
                                                                    'license_disclosed'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['neighbourhood'],
                                    transformer=TargetEncoder(cols=['neighbourhood'],
                                                              handle_missing='return_nan'))),
                ('trained_model', HuberRegressor(alpha=0.15, epsilon=1.1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B7D88BFD00>)
2023-06-29 17:49:15,611:INFO:Checking exceptions
2023-06-29 17:49:15,611:INFO:Preloading libraries
2023-06-29 17:49:15,611:INFO:Set up data.
2023-06-29 17:49:15,613:INFO:Set up index.
2023-06-29 17:52:40,501:INFO:Initializing load_model()
2023-06-29 17:52:40,501:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-29 17:52:40,530:INFO:Initializing predict_model()
2023-06-29 17:52:40,530:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B7DBD6D4B0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Russhi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['minimum_nights',
                                             'availability_365',
                                             'accommodates'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'room_type',
                                             'District', 'rental_type',
                                             'license_disclosed'],
                                    transfor...
                 TransformerWrapper(include=['room_type', 'District',
                                             'license_disclosed'],
                                    transformer=OneHotEncoder(cols=['room_type',
                                                                    'District',
                                                                    'license_disclosed'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['neighbourhood'],
                                    transformer=TargetEncoder(cols=['neighbourhood'],
                                                              handle_missing='return_nan'))),
                ('trained_model', HuberRegressor(alpha=0.15, epsilon=1.1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B7E7604940>)
2023-06-29 17:52:40,530:INFO:Checking exceptions
2023-06-29 17:52:40,530:INFO:Preloading libraries
2023-06-29 17:52:40,530:INFO:Set up data.
2023-06-29 17:52:40,533:INFO:Set up index.
2023-06-29 18:06:43,057:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-29 18:06:43,057:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-29 18:06:43,057:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-29 18:06:43,058:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-29 18:06:43,367:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-06-29 18:06:43,441:INFO:Initializing load_model()
2023-06-29 18:06:43,441:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-29 18:06:43,494:INFO:Initializing predict_model()
2023-06-29 18:06:43,494:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000013F19D1F850>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Russhi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['minimum_nights',
                                             'availability_365',
                                             'accommodates'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'room_type',
                                             'District', 'rental_type',
                                             'license_disclosed'],
                                    transfor...
                 TransformerWrapper(include=['room_type', 'District',
                                             'license_disclosed'],
                                    transformer=OneHotEncoder(cols=['room_type',
                                                                    'District',
                                                                    'license_disclosed'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['neighbourhood'],
                                    transformer=TargetEncoder(cols=['neighbourhood'],
                                                              handle_missing='return_nan'))),
                ('trained_model', HuberRegressor(alpha=0.15, epsilon=1.1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000013F19D3DA20>)
2023-06-29 18:06:43,494:INFO:Checking exceptions
2023-06-29 18:06:43,494:INFO:Preloading libraries
2023-06-29 18:06:43,494:INFO:Set up data.
2023-06-29 18:06:43,499:INFO:Set up index.
2023-06-29 18:06:47,698:INFO:Initializing load_model()
2023-06-29 18:06:47,698:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-06-29 18:06:47,737:INFO:Initializing predict_model()
2023-06-29 18:06:47,737:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000013F19D1FD60>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Russhi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['minimum_nights',
                                             'availability_365',
                                             'accommodates'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'room_type',
                                             'District', 'rental_type',
                                             'license_disclosed'],
                                    transfor...
                 TransformerWrapper(include=['room_type', 'District',
                                             'license_disclosed'],
                                    transformer=OneHotEncoder(cols=['room_type',
                                                                    'District',
                                                                    'license_disclosed'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['neighbourhood'],
                                    transformer=TargetEncoder(cols=['neighbourhood'],
                                                              handle_missing='return_nan'))),
                ('trained_model', HuberRegressor(alpha=0.15, epsilon=1.1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000013F19E41090>)
2023-06-29 18:06:47,737:INFO:Checking exceptions
2023-06-29 18:06:47,737:INFO:Preloading libraries
2023-06-29 18:06:47,738:INFO:Set up data.
2023-06-29 18:06:47,741:INFO:Set up index.
2023-07-01 09:16:50,279:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-01 09:16:50,279:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-01 09:16:50,279:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-01 09:16:50,279:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-01 09:16:51,527:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-07-01 09:16:51,711:INFO:Initializing load_model()
2023-07-01 09:16:51,711:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-07-01 09:16:51,758:INFO:Initializing predict_model()
2023-07-01 09:16:51,758:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C9ADC0BBB0>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Russhi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['minimum_nights',
                                             'availability_365',
                                             'accommodates'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'room_type',
                                             'District', 'rental_type',
                                             'license_disclosed'],
                                    transfor...
                 TransformerWrapper(include=['room_type', 'District',
                                             'license_disclosed'],
                                    transformer=OneHotEncoder(cols=['room_type',
                                                                    'District',
                                                                    'license_disclosed'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['neighbourhood'],
                                    transformer=TargetEncoder(cols=['neighbourhood'],
                                                              handle_missing='return_nan'))),
                ('trained_model', HuberRegressor(alpha=0.15, epsilon=1.1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001C9ADC1D7E0>)
2023-07-01 09:16:51,758:INFO:Checking exceptions
2023-07-01 09:16:51,758:INFO:Preloading libraries
2023-07-01 09:16:51,758:INFO:Set up data.
2023-07-01 09:16:51,761:INFO:Set up index.
2023-07-01 09:21:30,144:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-01 09:21:30,144:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-01 09:21:30,144:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-01 09:21:30,144:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-07-01 09:21:30,447:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-07-01 09:21:30,519:INFO:Initializing load_model()
2023-07-01 09:21:30,519:INFO:load_model(model_name=price_prediction_regression, platform=None, authentication=None, verbose=True)
2023-07-01 09:21:30,558:INFO:Initializing predict_model()
2023-07-01 09:21:30,558:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000223F6387610>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Russhi\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['minimum_nights',
                                             'availability_365',
                                             'accommodates'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['neighbourhood', 'room_type',
                                             'District', 'rental_type',
                                             'license_disclosed'],
                                    transfor...
                 TransformerWrapper(include=['room_type', 'District',
                                             'license_disclosed'],
                                    transformer=OneHotEncoder(cols=['room_type',
                                                                    'District',
                                                                    'license_disclosed'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['neighbourhood'],
                                    transformer=TargetEncoder(cols=['neighbourhood'],
                                                              handle_missing='return_nan'))),
                ('trained_model', HuberRegressor(alpha=0.15, epsilon=1.1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000223F63ACF70>)
2023-07-01 09:21:30,558:INFO:Checking exceptions
2023-07-01 09:21:30,558:INFO:Preloading libraries
2023-07-01 09:21:30,558:INFO:Set up data.
2023-07-01 09:21:30,561:INFO:Set up index.
